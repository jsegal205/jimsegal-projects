{"version":3,"sources":["GoogleAnalyticsTracker.js","utils/index.js","utils/useFetch.js","components/error/index.js","pages/recipes/index.js","pages/not-found/index.js","pages/recipe/index.js","pages/spacex/index.js","pages/congress/index.js","App.js","serviceWorker.js","index.js"],"names":["ReactGA","initialize","testMode","process","gaOptions","cookieDomain","withTracker","WrappedComponent","options","trackPage","page","set","pageview","HOC","props","useEffect","location","pathname","apiUrlBase","useFetch","url","initialValue","useState","data","setData","loading","setLoading","a","axios","get","response","message","error","status","fetchData","Error","componentName","Recipes","recipes","recipeSearch","setRecipeSearch","recipeList","setRecipeList","results","filter","recipe","title","toLowerCase","includes","length","className","htmlFor","type","id","value","onChange","event","target","data-testid","onClick","map","key","slug","to","state","NotFound","Recipe","pathNameSplit","split","getSlug","referenceLink","ingredients","directions","notes","href","rel","source","SpaceX","upcomingLaunch","calcTimeToLaunch","nextLaunch","difference","Date","timeLeft","days","Math","floor","hours","minutes","seconds","timeToLaunch","setTimeToLaunch","setTimeout","timerComponents","Object","keys","forEach","interval","push","launch","toString","Congress","congress","keyMap","D","F","M","R","properCase","charAt","toUpperCase","slice","genericLabel","label","ageSection","age","ageLabel","average","all","democrat","republican","female","male","detailedAge","full_name","date_of_birth","gender","party","genderSection","genderData","total","women","percentWomen","men","percentMen","partySection","partyKey","session","chamber","chamberSection","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.6317a7f5.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize(\"UA-45142145-1\", {\n  testMode: process.env.NODE_ENV === \"test\",\n  gaOptions: {\n    cookieDomain: \"auto\",\n  },\n});\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    ReactGA.set({\n      page,\n      ...options,\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = (props) => {\n    useEffect(() => trackPage(props.location.pathname), [\n      props.location.pathname,\n    ]);\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","export const apiUrlBase = \"https://api.jimsegal.com\";\n// export const apiUrlBase = \"http://localhost:8001\";\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// custom hook for performing GET request\nconst useFetch = (url, initialValue) => {\n  const [data, setData] = useState(initialValue);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(url);\n        setData(response.data);\n      } catch ({ message, response }) {\n        setData({ error: message, status: response ? response.status : \"500\" });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return { loading, data };\n};\n\nexport default useFetch;\n","import React from \"react\";\n\nconst Error = ({ componentName }) => (\n  <section>\n    <h3>\n      Whoops! There was a problem loading{\" \"}\n      {componentName ? `${componentName} data.` : \"data.\"}\n    </h3>\n    <p>Please reload browser to try again in a little bit.</p>\n  </section>\n);\n\nexport default Error;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./recipes.css\";\n\nconst Recipes = () => {\n  const { loading, data: recipes } = useFetch(`${apiUrlBase}/recipes`);\n\n  const [recipeSearch, setRecipeSearch] = useState(\"\");\n  const handleSearchChange = (event) => {\n    setRecipeSearch(event.target.value);\n  };\n  const handleResetClick = () => {\n    setRecipeSearch(\"\");\n  };\n\n  const [recipeList, setRecipeList] = useState([]);\n  useEffect(() => {\n    if (!loading && recipes) {\n      if (recipes.error) {\n        setRecipeList([]);\n        return;\n      }\n\n      const results = recipes.filter((recipe) =>\n        recipe.title.toLowerCase().includes(recipeSearch.toLowerCase())\n      );\n      setRecipeList(results);\n    }\n  }, [loading, recipes, recipeSearch]);\n\n  return (\n    <section>\n      <h2>Recipes</h2>\n      {loading && <section>Loading...</section>}\n      {recipes && recipes.error && <Error componentName=\"Recipes\" />}\n      {recipes && recipes.length && (\n        <>\n          <section className=\"recipes-filter-container\">\n            <label htmlFor=\"recipes-filter\">Search</label>\n            <input\n              type=\"text\"\n              id=\"recipes-filter\"\n              className=\"recipes-filter-input\"\n              value={recipeSearch}\n              onChange={handleSearchChange}\n              data-testid=\"recipes-filter\"\n            />\n            {recipeSearch && (\n              <button\n                className=\"recipes-filter-reset\"\n                onClick={handleResetClick}\n                data-testid=\"recipes-filter-reset\"\n              >\n                reset\n              </button>\n            )}\n          </section>\n          {recipeList.length ? (\n            <ul data-testid=\"recipes-list\">\n              {recipeList.map((recipe) => (\n                <li key={recipe.slug}>\n                  <Link\n                    to={{\n                      pathname: `/recipe/${recipe.slug}`,\n                      state: { ...recipe },\n                    }}\n                  >\n                    {recipe.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"recipes-no-results\">\n              No results for{\" \"}\n              <strong>\n                <em>{recipeSearch}</em>\n              </strong>\n            </div>\n          )}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Recipes;\n","import React from \"react\";\nimport \"../../App.css\";\n\nconst NotFound = () => <h1>Not Found</h1>;\n\nexport default NotFound;\n","import React from \"react\";\nimport { apiUrlBase } from \"../../utils\";\n\nimport ReactMarkdown from \"react-markdown\";\n\nimport useFetch from \"../../utils/useFetch\";\nimport NotFound from \"../not-found\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./recipe.css\";\n\nconst getSlug = ({ pathname, state }) => {\n  if (state && state.slug) {\n    // came from /recipes\n    return state.slug;\n  }\n\n  // didn't come from /recipes\n  const pathNameSplit = pathname.split(\"/\");\n  return pathNameSplit[pathNameSplit.length - 1];\n};\n\nconst Recipe = (props) => {\n  const slug = getSlug(props.location);\n  const { loading, data: recipe } = useFetch(`${apiUrlBase}/recipe/${slug}`);\n\n  if (loading) {\n    return <section>Loading...</section>;\n  }\n\n  if (recipe.status === 404) {\n    return <NotFound />;\n  }\n\n  if (recipe.error) {\n    return <Error componentName=\"Recipe\" />;\n  }\n\n  const { title, referenceLink, ingredients, directions, notes } = recipe;\n\n  return (\n    <section>\n      <h2>{title}</h2>\n      {referenceLink && (\n        <small>\n          <a href={referenceLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            Original Reference\n          </a>\n        </small>\n      )}\n      <h3>Ingredients</h3>\n      <div className=\"ingredients\">\n        <ReactMarkdown source={ingredients} />\n      </div>\n      <h3>Directions</h3>\n      <div className=\"directions\">\n        <ReactMarkdown source={directions} />\n      </div>\n      {notes && [\n        <h3 key=\"notes-header\">Notes</h3>,\n        <div key=\"notes-desc\">\n          <ReactMarkdown source={notes} />\n        </div>,\n      ]}\n    </section>\n  );\n};\n\nexport default Recipe;\n","import React, { useEffect, useState, Fragment } from \"react\";\n\nimport useFetch from \"../../utils/useFetch\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./spacex.css\";\n\nconst SpaceX = () => {\n  const { loading, data: upcomingLaunch } = useFetch(\n    `https://api.spacexdata.com/v3/launches/upcoming?limit=1`\n  );\n\n  const calcTimeToLaunch = (nextLaunch) => {\n    const difference = +new Date(nextLaunch) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeToLaunch, setTimeToLaunch] = useState(calcTimeToLaunch());\n  useEffect(() => {\n    if (!loading) {\n      if (upcomingLaunch.error) {\n        setTimeToLaunch(0);\n        return;\n      }\n\n      setTimeout(() => {\n        setTimeToLaunch(calcTimeToLaunch(upcomingLaunch[0][\"launch_date_utc\"]));\n      }, 1000);\n    }\n  }, [loading, upcomingLaunch]);\n\n  const timerComponents = [];\n\n  Object.keys(timeToLaunch).forEach((interval) => {\n    if (interval !== \"seconds\" && !timeToLaunch[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <div key={interval}>\n        {timeToLaunch[interval]} {interval}{\" \"}\n      </div>\n    );\n  });\n\n  return (\n    <section className=\"spacex-container\">\n      <h2>Next Space X Launch</h2>\n      {loading && <section>Loading...</section>}\n      {upcomingLaunch && upcomingLaunch.error && (\n        <Error componentName=\"SpaceX\" />\n      )}\n\n      {upcomingLaunch && upcomingLaunch.length && (\n        <>\n          {upcomingLaunch.map((launch) => (\n            <Fragment key={launch[\"mission_name\"]}>\n              <div className=\"spacex-mega\">{timerComponents}</div>\n\n              <h3>{launch[\"mission_name\"]}</h3>\n              <div className=\"spacex-item\">\n                <label>When:</label>\n                <span>{new Date(launch[\"launch_date_utc\"]).toString()}</span>\n              </div>\n              <div className=\"spacex-item\">\n                <label>Rocket:</label>\n                <span>{launch[\"rocket\"][\"rocket_name\"]}</span>\n              </div>\n              <div className=\"spacex-item\">\n                <label>Launch Site:</label>\n                <span>{launch[\"launch_site\"][\"site_name_long\"]}</span>\n              </div>\n\n              <div className=\"spacex-details\">{launch[\"details\"]}</div>\n            </Fragment>\n          ))}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default SpaceX;\n","import React, { Fragment } from \"react\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./congress.css\";\n\nconst Congress = () => {\n  const { loading, data: congress } = useFetch(`${apiUrlBase}/congress/stats`);\n\n  const keyMap = {\n    D: \"democrat\",\n    F: \"female\",\n    M: \"male\",\n    R: \"republican\",\n  };\n\n  const properCase = (value) => value.charAt(0).toUpperCase() + value.slice(1);\n  const genericLabel = (label, value) => (\n    <div>\n      {<label>{label}: </label>}\n      <span>{value}</span>\n    </div>\n  );\n\n  const chamberSection = (data, chamber) => (\n    <article key={chamber}>\n      <h3>{properCase(chamber)}</h3>\n      <hr />\n      <section className=\"chamber\">\n        {ageSection(data[chamber].age)}\n        {genderSection(data[chamber].gender)}\n        {partySection(data[chamber].party)}\n      </section>\n    </article>\n  );\n\n  const ageSection = (age) => (\n    <>\n      <section>\n        <h4>Average Age</h4>\n        {ageLabel(\"\", age.average.all)}\n\n        <section>\n          <h5>By Party</h5>\n          {ageLabel(properCase(keyMap.D), age.average.democrat)}\n          {ageLabel(properCase(keyMap.R), age.average.republican)}\n        </section>\n        <section>\n          <h5>By Gender</h5>\n          {ageLabel(properCase(keyMap.F), age.average.female)}\n          {ageLabel(properCase(keyMap.M), age.average.male)}\n        </section>\n      </section>\n      {detailedAge(age, \"youngest\")}\n      {detailedAge(age, \"oldest\")}\n    </>\n  );\n\n  const ageLabel = (label, age) => (\n    <div>\n      {label ? <label>{label}: </label> : \"\"}\n      <span>{age} years old</span>\n    </div>\n  );\n\n  const detailedAge = (data, key) => (\n    <section>\n      <h4>{properCase(key)} Member</h4>\n      <label>{data[key].full_name}</label>\n      {ageLabel(\"Age\", data[key].age)}\n      {genericLabel(\"Date of Birth\", data[key].date_of_birth)}\n      {genericLabel(\"State Representation\", data[key].state)}\n      {genericLabel(\"Gender\", properCase(keyMap[data[key].gender]))}\n      {genericLabel(\"Party\", properCase(keyMap[data[key].party]))}\n    </section>\n  );\n\n  const genderSection = (gender) => (\n    <>\n      <section>\n        <h4>Number of Members by Gender</h4>\n      </section>\n      {genderData(gender)}\n    </>\n  );\n\n  const genderData = (data) => (\n    <>\n      {genericLabel(\"Total\", data.total)}\n      {genericLabel(\n        properCase(keyMap.F),\n        `${data.women} (${data.percentWomen}%)`\n      )}\n      {genericLabel(properCase(keyMap.M), `${data.men} (${data.percentMen}%)`)}\n    </>\n  );\n\n  const partySection = (party) => (\n    <>\n      <section>\n        <h4>Number of Members by Party</h4>\n      </section>\n      {[\"D\", \"R\"].map((partyKey) => (\n        <Fragment key={partyKey}>\n          <h5>{properCase(keyMap[partyKey])}</h5>\n          {genderData(party[partyKey])}\n        </Fragment>\n      ))}\n    </>\n  );\n\n  return (\n    <section>\n      <h2 className=\"congress-header\">Congressional Information</h2>\n      {loading && <section className=\"congress-header\">Loading...</section>}\n      {congress && congress.error && <Error componentName=\"Congress\" />}\n      {congress && !congress.error && (\n        <>\n          <div className=\"congress-subheader\">Session #{congress.session}</div>\n          <div className=\"congress\">\n            {[\"house\", \"senate\"].map((chamber) =>\n              chamberSection(congress, chamber)\n            )}\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Congress;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport withTracker from \"./GoogleAnalyticsTracker\";\n\nimport Recipes from \"./pages/recipes\";\nimport Recipe from \"./pages/recipe\";\nimport SpaceX from \"./pages/spacex\";\nimport NotFound from \"./pages/not-found\";\nimport Congress from \"./pages/congress\";\n\nconst App = () => {\n  return (\n    <>\n      <header>\n        <h1>Jim Segal Projects</h1>\n      </header>\n      <Router>\n        <article>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/congress\">Congress</Link>\n              </li>\n              <li>\n                <Link to=\"/recipes\">Recipes</Link>\n              </li>\n              <li>\n                <Link to=\"/spacex\">Space X</Link>\n              </li>\n            </ul>\n          </nav>\n          <hr />\n          <Switch>\n            <Route exact path=\"/\" component={withTracker(Recipes)} />\n            <Route path=\"/congress\" component={withTracker(Congress)} />\n            <Route path=\"/recipes\" component={withTracker(Recipes)} />\n            <Route path=\"/recipe/:recipeSlug\" component={withTracker(Recipe)} />\n            <Route path=\"/spacex\" component={withTracker(SpaceX)} />\n            <Route path=\"*\" component={withTracker(NotFound)} />\n          </Switch>\n        </article>\n      </Router>\n    </>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}