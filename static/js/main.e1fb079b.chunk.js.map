{"version":3,"sources":["GoogleAnalyticsTracker.js","utils/index.js","utils/useFetch.js","components/error/index.js","components/loading/index.js","components/search-filter/index.js","pages/recipes/index.js","pages/not-found/index.js","pages/recipe/index.js","pages/spacex/index.js","utils/windowDimensions.js","pages/congress/utils.js","pages/congress/index.js","pages/congress/members.js","pages/congress/member.js","components/topnav/index.js","utils/color.js","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["ReactGA","initialize","testMode","process","gaOptions","cookieDomain","withTracker","WrappedComponent","options","trackPage","page","set","pageview","HOC","props","useEffect","location","pathname","apiUrlBase","projectInfo","absolute","link","subtitle","title","useFetch","url","initialValue","useState","data","setData","loading","setLoading","a","axios","get","response","message","error","status","fetchData","Error","componentName","Loading","className","SearchFilter","handleResetClick","handleSearchChange","searchValue","htmlFor","type","id","value","onChange","data-testid","onClick","Recipes","recipes","recipeSearch","setRecipeSearch","recipeList","setRecipeList","results","filter","recipe","toLowerCase","includes","length","event","target","map","key","slug","to","state","NotFound","Recipe","pathNameSplit","split","getSlug","referenceLink","ingredients","directions","notes","href","rel","source","SpaceX","upcomingLaunch","futureLaunchIndex","Date","now","calcTimeToLaunch","timeLeft","difference","days","Math","floor","hours","minutes","seconds","timeToLaunch","setTimeToLaunch","timer","setTimeout","clearTimeout","timerComponents","Object","keys","forEach","interval","push","launch","launchDate","toLocaleString","weekday","year","month","day","hour","minute","launchDetails","getWindowDimensions","window","height","innerHeight","width","innerWidth","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","chamberTitles","chamber","otherChamber","partyName","abbreviation","properCase","charAt","toUpperCase","slice","Congress","congress","keyMap","D","F","M","R","house","senate","genericLabel","label","chamberAgeChart","distribution","chamberData","age","barGap","barCategoryGap","margin","top","right","left","bottom","strokeDasharray","dataKey","position","allowDecimals","verticalAlign","stackId","fill","name","ageSection","ageLabel","average","all","democrat","republican","female","male","detailedAge","full_name","date_of_birth","gender","party","genderSection","genderData","total","women","percentWomen","men","percentMen","partySection","partyChart","color","outerRadius","entry","chamberSection","CongressMembers","getChamber","members","memberSearch","setMemberSearch","memberList","setMemberList","member","first_name","last_name","match","addDefaultSrc","src","alt","onError","Member","getUrlParams","current_party","twitter_account","next_election","terms","initial_elected_in","most_recent_vote","careerVoting","termInfo","misconduct","m","first_date","allegation","allegationCategories","join","currentStatus","text","careerVotesEligible","careerVotesCast","careerMissedVotes","careerPresentVotes","careerVotesWithParty","careerVotesAgainstParty","term","start_date","end_date","total_votes","missed_votes","total_present","votesWithParty","votesAgainstParty","TopNav","project","withRouter","getRGB","hex","r","parseInt","g","b","textColor","round","cardDetails","style","backgroundColor","Home","borderColor","random","toString","complementaryBorderColor","invertColor","digit","complementaryColor","App","role","exact","path","component","CongressMember","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e1fb079b.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize(\"UA-45142145-1\", {\n  testMode: process.env.NODE_ENV === \"test\",\n  gaOptions: {\n    cookieDomain: \"auto\",\n  },\n});\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    ReactGA.set({\n      page,\n      ...options,\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = (props) => {\n    useEffect(() => trackPage(props.location.pathname), [\n      props.location.pathname,\n    ]);\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","export const apiUrlBase = \"https://api.jimsegal.com\";\n// export const apiUrlBase = \"http://localhost:8001\";\n\nexport const projectInfo = [\n  {\n    absolute: true,\n    link: \"https://jimsegal.com\",\n    subtitle: \"OG site with other projects\",\n    title: \"JimSegal.com\",\n  },\n  {\n    link: \"/congress\",\n    subtitle: \"Some fun data surrounding the current congressional sesssion\",\n    title: \"Congress\",\n  },\n  {\n    link: \"/recipes\",\n    subtitle: \"A bunch of recipes that I frequent and wanted to show off\",\n    title: \"Recipes\",\n  },\n  {\n    link: \"/spacex\",\n    subtitle: \"A countdown timer until the next launch of a Space X rocket\",\n    title: \"Space X\",\n  },\n];\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// custom hook for performing GET request\nconst useFetch = (url, initialValue) => {\n  const [data, setData] = useState(initialValue);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(url);\n        setData(response.data);\n      } catch ({ message, response }) {\n        setData({ error: message, status: response ? response.status : \"500\" });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return { loading, data };\n};\n\nexport default useFetch;\n","import React from \"react\";\n\nconst Error = ({ componentName }) => (\n  <section>\n    <h3>\n      Whoops! There was a problem loading{\" \"}\n      {componentName ? `${componentName} data.` : \"data.\"}\n    </h3>\n    <p>Please reload browser to try again in a little bit.</p>\n  </section>\n);\n\nexport default Error;\n","import React from \"react\";\n\nimport \"./loading.css\";\n\nconst Loading = () => (\n  <section className=\"loader\">\n    <div className=\"loader-wheel\"></div>\n    <div className=\"loader-text\">Loading</div>\n  </section>\n);\n\nexport default Loading;\n","import React from \"react\";\n\nimport \"./search-filter.css\";\n\nconst SearchFilter = ({\n  handleResetClick,\n  handleSearchChange,\n  searchValue,\n}) => (\n  <section className=\"search-filter-container\">\n    <label htmlFor=\"search-filter\">Search</label>\n    <input\n      type=\"text\"\n      id=\"search-filter\"\n      className=\"search-filter-input\"\n      value={searchValue}\n      onChange={handleSearchChange}\n      data-testid=\"search-filter\"\n    />\n    {searchValue && (\n      <button\n        className=\"search-filter-reset\"\n        onClick={handleResetClick}\n        data-testid=\"search-filter-reset\"\n      >\n        Reset\n      </button>\n    )}\n  </section>\n);\n\nexport default SearchFilter;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./recipes.css\";\nimport Loading from \"../../components/loading\";\nimport SearchFilter from \"../../components/search-filter\";\n\nconst Recipes = () => {\n  const { loading, data: recipes } = useFetch(`${apiUrlBase}/recipes`);\n\n  const [recipeSearch, setRecipeSearch] = useState(\"\");\n  const handleSearchChange = (event) => {\n    setRecipeSearch(event.target.value);\n  };\n  const handleResetClick = () => {\n    setRecipeSearch(\"\");\n  };\n\n  const [recipeList, setRecipeList] = useState([]);\n  useEffect(() => {\n    if (!loading && recipes) {\n      if (recipes.error) {\n        setRecipeList([]);\n        return;\n      }\n\n      const results = recipes.filter((recipe) =>\n        recipe.title.toLowerCase().includes(recipeSearch.toLowerCase())\n      );\n      setRecipeList(results);\n    }\n  }, [loading, recipes, recipeSearch]);\n\n  return (\n    <section>\n      <h2>Recipes</h2>\n      {loading && <Loading />}\n      {recipes && recipes.error && <Error componentName=\"Recipes\" />}\n      {recipes && recipes.length && (\n        <>\n          <SearchFilter\n            searchValue={recipeSearch}\n            handleResetClick={handleResetClick}\n            handleSearchChange={handleSearchChange}\n          />\n          {recipeList.length ? (\n            <ul className=\"recipes-list\" data-testid=\"recipes-list\">\n              {recipeList.map((recipe) => (\n                <li key={recipe.slug}>\n                  <Link\n                    to={{\n                      pathname: `/recipe/${recipe.slug}`,\n                      state: { ...recipe },\n                    }}\n                  >\n                    {recipe.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"recipes-no-results\">\n              No results for{\" \"}\n              <strong>\n                <em>{recipeSearch}</em>\n              </strong>\n            </div>\n          )}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Recipes;\n","import React from \"react\";\nimport \"../../App.css\";\n\nconst NotFound = () => <h1>Not Found</h1>;\n\nexport default NotFound;\n","import React from \"react\";\nimport { apiUrlBase } from \"../../utils\";\n\nimport ReactMarkdown from \"react-markdown\";\n\nimport useFetch from \"../../utils/useFetch\";\nimport NotFound from \"../not-found\";\nimport Error from \"../../components/error\";\nimport Loading from \"../../components/loading\";\n\nimport \"../../App.css\";\nimport \"./recipe.css\";\n\nconst getSlug = ({ pathname, state }) => {\n  if (state && state.slug) {\n    // came from /recipes\n    return state.slug;\n  }\n\n  // didn't come from /recipes\n  const pathNameSplit = pathname.split(\"/\");\n  return pathNameSplit[pathNameSplit.length - 1];\n};\n\nconst Recipe = (props) => {\n  const slug = getSlug(props.location);\n  const { loading, data: recipe } = useFetch(`${apiUrlBase}/recipe/${slug}`);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (recipe.status === 404) {\n    return <NotFound />;\n  }\n\n  if (recipe.error) {\n    return <Error componentName=\"Recipe\" />;\n  }\n\n  const { title, referenceLink, ingredients, directions, notes } = recipe;\n\n  return (\n    <section>\n      <h2>{title}</h2>\n      {referenceLink && (\n        <small>\n          <a href={referenceLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            Original Reference\n          </a>\n        </small>\n      )}\n      <h3>Ingredients</h3>\n      <div className=\"ingredients\">\n        <ReactMarkdown source={ingredients} />\n      </div>\n      <h3>Directions</h3>\n      <div className=\"directions\">\n        <ReactMarkdown source={directions} />\n      </div>\n      {notes && [\n        <h3 key=\"notes-header\">Notes</h3>,\n        <div key=\"notes-desc\">\n          <ReactMarkdown source={notes} />\n        </div>,\n      ]}\n    </section>\n  );\n};\n\nexport default Recipe;\n","import React, { useEffect, useState, Fragment } from \"react\";\n\nimport useFetch from \"../../utils/useFetch\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./spacex.css\";\nimport Loading from \"../../components/loading\";\n\nconst SpaceX = () => {\n  const { loading, data: upcomingLaunch } = useFetch(\n    `https://api.spacexdata.com/v3/launches/upcoming?limit=2`\n  );\n\n  const futureLaunchIndex = () => {\n    if (!loading && upcomingLaunch.length) {\n      return upcomingLaunch[0][\"launch_date_unix\"] < Date.now() / 1000 ? 1 : 0;\n    }\n  };\n\n  const calcTimeToLaunch = () => {\n    let timeLeft = {};\n    if (!loading) {\n      if (upcomingLaunch.error) {\n        return timeLeft;\n      }\n\n      if (upcomingLaunch[futureLaunchIndex()]) {\n        const difference =\n          upcomingLaunch[futureLaunchIndex()][\"launch_date_unix\"] -\n          Date.now() / 1000;\n\n        if (difference > 0) {\n          timeLeft = {\n            days: Math.floor(difference / (60 * 60 * 24)),\n            hours: Math.floor((difference / (60 * 60)) % 24),\n            minutes: Math.floor((difference / 60) % 60),\n            seconds: Math.floor(difference % 60),\n          };\n        }\n      }\n    }\n    return timeLeft;\n  };\n\n  const [timeToLaunch, setTimeToLaunch] = useState(calcTimeToLaunch());\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeToLaunch(calcTimeToLaunch());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n\n  const timerComponents = [];\n\n  Object.keys(timeToLaunch).forEach((interval) => {\n    if (interval !== \"seconds\" && !timeToLaunch[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <div key={interval}>\n        {timeToLaunch[interval]} {interval}{\" \"}\n      </div>\n    );\n  });\n\n  const launchDetails = () => {\n    if (loading) {\n      return null;\n    }\n\n    const launch = upcomingLaunch[futureLaunchIndex()];\n    const options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n    };\n\n    const launchDate = new Date(launch[\"launch_date_utc\"]).toLocaleString(\n      \"en-US\",\n      options\n    );\n    return (\n      <Fragment key={launch[\"mission_name\"]}>\n        <div className=\"spacex-mega\">{timerComponents}</div>\n\n        <h3>{launch[\"mission_name\"]}</h3>\n        <div className=\"spacex-item\">\n          <label>When:</label>\n          <span>{launchDate}</span>\n        </div>\n        <div className=\"spacex-item\">\n          <label>Rocket:</label>\n          <span>{launch[\"rocket\"][\"rocket_name\"]}</span>\n        </div>\n        <div className=\"spacex-item\">\n          <label>Launch Site:</label>\n          <span>{launch[\"launch_site\"][\"site_name_long\"]}</span>\n        </div>\n\n        <div className=\"spacex-details\">{launch[\"details\"]}</div>\n      </Fragment>\n    );\n  };\n\n  return (\n    <section className=\"spacex-container\">\n      <h2>Next Space X Launch</h2>\n      {loading && <Loading />}\n      {upcomingLaunch && upcomingLaunch.error && (\n        <Error componentName=\"SpaceX\" />\n      )}\n\n      {upcomingLaunch && upcomingLaunch.length && launchDetails()}\n    </section>\n  );\n};\n\nexport default SpaceX;\n","import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerHeight: height, innerWidth: width } = window;\n  return { height, width };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nexport default useWindowDimensions;\n","export const chamberTitles = (chamber) => {\n  switch (chamber) {\n    case \"house\":\n      return \"Representatives\";\n    case \"senate\":\n      return \"Senators\";\n    default:\n      return \"Members\";\n  }\n};\n\nexport const individualChamberTitle = (chamber) => {\n  const pluralTitle = chamberTitles(chamber);\n  return pluralTitle.substring(0, pluralTitle.length - 1);\n};\n\nexport const otherChamber = (chamber) =>\n  chamber === \"house\" ? \"senate\" : \"house\";\n\nexport const partyName = (abbreviation) => {\n  switch (abbreviation.toLowerCase()) {\n    case \"d\":\n      return \"Democrat\";\n    case \"r\":\n      return \"Republican\";\n    case \"i\":\n      return \"Independent\";\n    default:\n      return \"\";\n  }\n};\n\nexport const properCase = (value) =>\n  !!value ? value.charAt(0).toUpperCase() + value.slice(1) : \"\";\n","import React from \"react\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport useWindowDimensions from \"../../utils/windowDimensions\";\nimport { chamberTitles, properCase } from \"./utils\";\n\nimport Error from \"../../components/error\";\nimport Loading from \"../../components/loading\";\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  PieChart,\n  Pie,\n  Cell,\n} from \"recharts\";\n\nimport \"../../App.css\";\nimport \"./congress.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Congress = () => {\n  const { loading, data: congress } = useFetch(`${apiUrlBase}/congress/stats`);\n  const { width } = useWindowDimensions();\n\n  const keyMap = {\n    D: \"democrat\",\n    F: \"female\",\n    M: \"male\",\n    R: \"republican\",\n    house: \"House of Representatives\",\n    senate: \"Senate\",\n  };\n\n  const genericLabel = (label, value) => (\n    <div>\n      {<label>{label}: </label>}\n      <span>{value}</span>\n    </div>\n  );\n\n  const chamberSection = (data, chamber) => (\n    <article key={chamber}>\n      <hr />\n      <h3>{keyMap[chamber]}</h3>\n      <Link\n        className=\"chamber-members\"\n        to={{\n          pathname: `/congress/${chamber}/members`,\n          state: { chamber },\n        }}\n      >\n        View Current {chamberTitles(chamber)}\n      </Link>\n      <section className=\"chamber\">\n        {!!data[chamber].age.distribution &&\n          chamberAgeChart(data[chamber].age.distribution)}\n        <section className=\"chamber-data\">\n          {ageSection(data[chamber].age, chamber)}\n          {genderSection(data[chamber].gender)}\n          {partySection(data[chamber].party)}\n        </section>\n      </section>\n    </article>\n  );\n  const chamberAgeChart = (distribution) => {\n    const chamberData = Object.keys(distribution).map((age) => {\n      return { ...distribution[age], age: age };\n    });\n\n    return (\n      <section className=\"chamber-chart\">\n        <h3>Distribution of age</h3>\n        <BarChart\n          width={width * 0.9}\n          height={400}\n          data={chamberData}\n          barGap={\"10%\"}\n          barCategoryGap={\"20%\"}\n          margin={{\n            top: 20,\n            right: 10,\n            left: 10,\n            bottom: 20,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"age\" label={{ value: \"Age\", position: \"bottom\" }} />\n          <YAxis allowDecimals={false} />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" />\n          <Bar\n            dataKey=\"D\"\n            stackId=\"a\"\n            fill=\"#0015BC\"\n            name={properCase(keyMap.D)}\n          />\n          <Bar\n            dataKey=\"R\"\n            stackId=\"a\"\n            fill=\"#E9141D\"\n            name={properCase(keyMap.R)}\n          />\n          <Bar\n            dataKey=\"M\"\n            stackId=\"b\"\n            fill=\"#00D136\"\n            name={properCase(keyMap.M)}\n          />\n          <Bar\n            dataKey=\"F\"\n            stackId=\"b\"\n            fill=\"#B533FF\"\n            name={properCase(keyMap.F)}\n          />\n        </BarChart>\n      </section>\n    );\n  };\n\n  const ageSection = (age, chamber) => (\n    <>\n      <section>\n        <h4>Average Age</h4>\n        {ageLabel(\"\", age.average.all)}\n\n        <section>\n          <h5>By Party</h5>\n          {ageLabel(properCase(keyMap.D), age.average.democrat)}\n          {ageLabel(properCase(keyMap.R), age.average.republican)}\n        </section>\n        <section>\n          <h5>By Gender</h5>\n          {ageLabel(properCase(keyMap.F), age.average.female)}\n          {ageLabel(properCase(keyMap.M), age.average.male)}\n        </section>\n      </section>\n      {detailedAge(age, \"youngest\", chamber)}\n      {detailedAge(age, \"oldest\", chamber)}\n    </>\n  );\n\n  const ageLabel = (label, age) => (\n    <div>\n      {label ? <label>{label}: </label> : \"\"}\n      <span>{age} years old</span>\n    </div>\n  );\n\n  const detailedAge = (data, key, chamber) => (\n    <section>\n      <h4>{properCase(key)} Member</h4>\n      <label>\n        <Link\n          to={{\n            pathname: `/congress/${chamber}/member/${data[key].id}`,\n            state: { ...data[key] },\n          }}\n        >\n          {data[key].full_name}\n        </Link>\n      </label>\n      {ageLabel(\"Age\", data[key].age)}\n      {genericLabel(\"Date of Birth\", data[key].date_of_birth)}\n      {genericLabel(\"State Representation\", data[key].state)}\n      {genericLabel(\"Gender\", properCase(keyMap[data[key].gender]))}\n      {genericLabel(\"Party\", properCase(keyMap[data[key].party]))}\n    </section>\n  );\n\n  const genderSection = (gender) => (\n    <section>\n      <h4>Number of Members by Gender</h4>\n      {genderData(gender)}\n    </section>\n  );\n\n  const genderData = (data) => (\n    <>\n      {genericLabel(\"Total\", data.total)}\n      {genericLabel(\n        properCase(keyMap.F),\n        `${data.women} (${data.percentWomen}%)`\n      )}\n      {genericLabel(properCase(keyMap.M), `${data.men} (${data.percentMen}%)`)}\n    </>\n  );\n\n  const partySection = (party) => (\n    <section className=\"congress-party-section\">\n      <h4>Number of Members by Party</h4>\n      {partyChart(party)}\n    </section>\n  );\n\n  const partyChart = (party) => {\n    const democrat = [\n      { name: \"Male\", value: party.D.men, color: \"#00D136\" },\n      { name: \"Female\", value: party.D.women, color: \"#B533FF\" },\n    ];\n    const republican = [\n      { name: \"Male\", value: party.R.men, color: \"#00D136\" },\n      { name: \"Female\", value: party.R.women, color: \"#B533FF\" },\n    ];\n\n    return (\n      <>\n        <div className=\"congress-party-chart-legend\">\n          <span className=\"congress-party-chart-legend-item congress-party-chart-legend-item-male\">\n            .\n          </span>\n          <span>Male</span>\n          <span className=\"congress-party-chart-legend-item congress-party-chart-legend-item-female\">\n            .\n          </span>\n          <span>Female</span>\n        </div>\n        <section className=\"congress-party-chart-section\">\n          <h4 className=\"congress-party-chart-section-header\">Democrats</h4>\n          <PieChart width={200} height={200}>\n            <Pie dataKey=\"value\" data={democrat} outerRadius={80}>\n              {democrat.map((entry) => (\n                <Cell fill={entry.color} key={entry.name} />\n              ))}\n            </Pie>\n            <Tooltip />\n          </PieChart>\n          {genderData(party.D)}\n        </section>\n        <section className=\"congress-party-chart-section\">\n          <h4 className=\"congress-party-chart-section-header\">Republicans</h4>\n          <PieChart width={200} height={200}>\n            <Pie dataKey=\"value\" data={republican} outerRadius={80}>\n              {republican.map((entry) => (\n                <Cell fill={entry.color} key={entry.name} />\n              ))}\n            </Pie>\n            <Tooltip />\n          </PieChart>\n          {genderData(party.R)}\n        </section>\n      </>\n    );\n  };\n\n  return (\n    <section>\n      <h2 className=\"congress-header\">Congressional Information</h2>\n      <article className=\"congress-citation\">\n        <span>Data provided by </span>\n        <a\n          href=\"https://projects.propublica.org/api-docs/congress-api/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Propublica Congress API\n        </a>\n      </article>\n      {loading && <Loading />}\n      {congress && congress.error && <Error componentName=\"Congress\" />}\n      {congress && !congress.error && (\n        <div className=\"congress\">\n          {[\"house\", \"senate\"].map((chamber) =>\n            chamberSection(congress, chamber)\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Congress;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport { chamberTitles, otherChamber, partyName } from \"./utils\";\n\nimport NotFound from \"../not-found\";\nimport Error from \"../../components/error\";\nimport Loading from \"../../components/loading\";\n\nimport \"../../App.css\";\nimport \"./congress.css\";\nimport SearchFilter from \"../../components/search-filter\";\n\nconst getChamber = ({ pathname, state }) => {\n  if (state && state.chamber) {\n    // came from internal link\n    return state.chamber;\n  }\n\n  // direct page load\n  const pathNameSplit = pathname.split(\"/\");\n  return pathNameSplit[pathNameSplit.length - 2];\n};\n\nconst CongressMembers = (props) => {\n  const chamber = getChamber(props.location);\n  const { loading, data: members } = useFetch(\n    `${apiUrlBase}/congress/${chamber}/members`\n  );\n\n  const [memberSearch, setMemberSearch] = useState(\"\");\n  const handleSearchChange = (event) => {\n    setMemberSearch(event.target.value);\n  };\n  const handleResetClick = () => {\n    setMemberSearch(\"\");\n  };\n\n  const [memberList, setMemberList] = useState([]);\n  useEffect(() => {\n    if (!loading && members) {\n      if (members.error || members.status === 404) {\n        setMemberList([]);\n        return;\n      }\n\n      const results = members[chamber]\n        ? members[chamber].filter(\n            (member) =>\n              member.first_name\n                .toLowerCase()\n                .includes(memberSearch.toLowerCase()) ||\n              member.last_name\n                .toLowerCase()\n                .includes(memberSearch.toLowerCase())\n          )\n        : [];\n      setMemberList(results);\n    }\n  }, [loading, members, chamber, memberSearch]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (members.status === 404 || !chamber.match(/^(house|senate)$/)) {\n    return <NotFound />;\n  }\n\n  if (members.error) {\n    return <Error componentName=\"Congress Memebers\" />;\n  }\n\n  const addDefaultSrc = (event) => {\n    event.target.src = \"/assets/congress-seal.png\";\n    event.target.alt = \"United States Seal of Congress\";\n  };\n\n  return (\n    <section>\n      <Link\n        className=\"chamber-members\"\n        to={{\n          pathname: `/congress`,\n        }}\n      >\n        All Congress Data\n      </Link>\n      <h2 className=\"congress-header\">Current {chamberTitles(chamber)}</h2>\n      <Link\n        className=\"chamber-members\"\n        to={{ pathname: `/congress/${otherChamber(chamber)}/members` }}\n      >\n        View Current {chamberTitles(otherChamber(chamber))}\n      </Link>\n      <hr />\n      <SearchFilter\n        searchValue={memberSearch}\n        handleResetClick={handleResetClick}\n        handleSearchChange={handleSearchChange}\n      />\n      {memberList.length ? (\n        <ul className=\"congress-members\" data-testid=\"members-list\">\n          {memberList.map((member) => {\n            return (\n              <li key={`${member.id}-${member.party}`}>\n                <Link\n                  to={{\n                    pathname: `/congress/${chamber}/member/${member.id}`,\n                    state: { ...member },\n                  }}\n                  className=\"congress-members-card\"\n                >\n                  <img\n                    src={`https://www.congress.gov/img/member/${member.id.toLowerCase()}.jpg`}\n                    alt={`Professional headshot of ${member.first_name} ${member.last_name}`}\n                    onError={addDefaultSrc}\n                  />\n                  <label>\n                    {member.first_name} {member.last_name}\n                  </label>\n                  {partyName(member.party)} - {member.state}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <div className=\"members-no-results\">\n          No results for{\" \"}\n          <strong>\n            <em>{memberSearch}</em>\n          </strong>\n        </div>\n      )}\n    </section>\n  );\n};\nexport default CongressMembers;\n","import React from \"react\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\n\nimport NotFound from \"../not-found\";\nimport Error from \"../../components/error\";\nimport Loading from \"../../components/loading\";\n\nimport \"../../App.css\";\nimport \"./congress.css\";\nimport { Link } from \"react-router-dom\";\nimport { partyName, properCase } from \"./utils\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst getUrlParams = ({ pathname, state }) => {\n  if (state && state.chamber && state.id) {\n    // came from internal link\n    return { chamber: state.chamber, id: state.id };\n  }\n\n  // direct page load\n  const pathNameSplit = pathname.split(\"/\");\n  return {\n    chamber: pathNameSplit[pathNameSplit.length - 3],\n    id: pathNameSplit[pathNameSplit.length - 1],\n  };\n};\n\nconst Member = (props) => {\n  const { chamber, id } = getUrlParams(props.location);\n\n  const { loading, data: member } = useFetch(\n    `${apiUrlBase}/congress/${chamber}/member/${id}`\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (member.status === 404 || !chamber.match(/^(house|senate)$/)) {\n    return <NotFound />;\n  }\n\n  if (member.error) {\n    return <Error componentName=\"Congress Memeber\" />;\n  }\n\n  const addDefaultSrc = (event) => {\n    event.target.src = \"/assets/congress-seal.png\";\n    event.target.alt = \"United States Seal of Congress\";\n  };\n\n  const {\n    age,\n    first_name,\n    last_name,\n    date_of_birth,\n    gender,\n    current_party,\n    url,\n    twitter_account,\n    state,\n    next_election,\n    terms,\n    initial_elected_in,\n    most_recent_vote,\n    careerVoting,\n    termInfo,\n    misconduct,\n  } = member;\n\n  return (\n    <section className=\"congress-member\">\n      <Link\n        to={{\n          pathname: `/congress/${chamber}/members`,\n          state: { chamber },\n        }}\n      >\n        Back to all members\n      </Link>\n      <h2>\n        {first_name} {last_name}\n      </h2>\n      <div className=\"headshot\">\n        <img\n          src={`https://www.congress.gov/img/member/${id.toLowerCase()}.jpg`}\n          alt={`Professional headshot of ${first_name} ${last_name}`}\n          onError={addDefaultSrc}\n        />\n      </div>\n      <section className=\"congress-member-links\">\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          Website\n        </a>\n\n        <a\n          href={`https://twitter.com/${twitter_account}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Twitter\n        </a>\n      </section>\n      <hr />\n      <article className=\"information\">\n        <section>\n          <ul>\n            <li>\n              <label>Most recent vote:</label> {most_recent_vote}\n            </li>\n            <li>\n              <label>Date of Birth:</label> {date_of_birth} (age: {age})\n            </li>\n            <li>\n              <label>Gender:</label> {gender}\n            </li>\n            <li>\n              <label>Current Party:</label> {partyName(current_party)}\n            </li>\n            <li>\n              <label>State Representing:</label> {state}\n            </li>\n            <li>\n              <label>Will be up for re-election in:</label> {next_election}\n            </li>\n            <li>\n              <p>\n                Has served <em>{terms}</em> terms starting initially elected\n                into office in <em>{initial_elected_in}</em>\n              </p>\n            </li>\n          </ul>\n        </section>\n\n        {!!misconduct.length && (\n          <section>\n            <h3>Official Misconduct Reports</h3>\n            <h4>\n              Data provided by{\" \"}\n              <a\n                href=\"https://github.com/govtrack/misconduct\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                GovTrack Congressional Misconduct DB\n              </a>\n            </h4>\n\n            {misconduct.map((m) => (\n              <ul key={m.first_date}>\n                <li>\n                  <label>Allegation:</label> {properCase(m.allegation)}\n                </li>\n                <li>\n                  <label>Initiated on:</label> {m.first_date}\n                </li>\n                <li>\n                  <label>Allegation Categories:</label>{\" \"}\n                  {m.allegationCategories.join(\", \")}\n                </li>\n                <li>\n                  <label>Current Status:</label> {properCase(m.currentStatus)}\n                </li>\n                <li>\n                  <ReactMarkdown source={m.text} />\n                </li>\n              </ul>\n            ))}\n          </section>\n        )}\n\n        <section>\n          <h3>Career Voting History</h3>\n          <ul>\n            <li>\n              <label>Total Votes Eligible:</label>{\" \"}\n              {careerVoting.careerVotesEligible}\n            </li>\n            <li>\n              <label>Total Cast Votes:</label> {careerVoting.careerVotesCast}\n            </li>\n            <li>\n              <label>Total Missed Votes:</label>{\" \"}\n              {careerVoting.careerMissedVotes}\n            </li>\n            <li>\n              <label>Total Present Votes:</label>{\" \"}\n              {careerVoting.careerPresentVotes}\n            </li>\n            <li>\n              <label>Total Votes With {partyName(current_party)} Party:</label>{\" \"}\n              {careerVoting.careerVotesWithParty}*\n            </li>\n            <li>\n              <label>\n                Total Votes Against {partyName(current_party)} Party:\n              </label>{\" \"}\n              {careerVoting.careerVotesAgainstParty}*\n            </li>\n          </ul>\n        </section>\n\n        <section>\n          <h3>Individual Term Voting Statistics</h3>\n\n          {termInfo.map((term) => {\n            const {\n              congress,\n              start_date,\n              end_date,\n              total_votes,\n              missed_votes,\n              party,\n              total_present,\n              votesWithParty,\n              votesAgainstParty,\n            } = term;\n            return (\n              <ul key={`${congress}-${party}`} className=\"term-info\">\n                <li>\n                  <label>Congressional Session:</label> {congress} - From{\" \"}\n                  {start_date} until {end_date}\n                </li>\n                {current_party !== party ? (\n                  <li>\n                    <label>Party:</label> {partyName(party)}\n                  </li>\n                ) : null}\n                <li>\n                  <label>Cast Votes:</label>{\" \"}\n                  {total_votes - missed_votes - total_present}\n                </li>\n                <li>\n                  <label>Votes With {partyName(party)} Party:</label>{\" \"}\n                  {votesWithParty}*\n                </li>\n                <li>\n                  <label>Votes Against {partyName(party)} Party:</label>{\" \"}\n                  {votesAgainstParty}*\n                </li>\n              </ul>\n            );\n          })}\n        </section>\n        <footer className=\"footnote\">\n          * - counts relating to votes with or against party might be off due to\n          rounding precision or insufficient historical data provided\n        </footer>\n      </article>\n    </section>\n  );\n};\nexport default Member;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport \"./topnav.css\";\nimport { projectInfo } from \"../../utils\";\n\nconst TopNav = (props) =>\n  props.location.pathname === \"/\" ? null : (\n    <>\n      <nav>\n        <ul className=\"topnav-list\">\n          {projectInfo.map((project) => (\n            <li className=\"topnav-list-item\" key={project.title}>\n              {project.absolute ? (\n                <a title={project.subtitle} href={project.link}>\n                  {project.title}\n                </a>\n              ) : (\n                <Link title={project.subtitle} to={project.link}>\n                  {project.title}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ul>\n      </nav>\n      <hr />\n    </>\n  );\n\nexport default withRouter((props) => <TopNav {...props} />);\n","const getRGB = (hex) => {\n  return {\n    r: parseInt(hex.slice(0, 2), 16),\n    g: parseInt(hex.slice(2, 4), 16),\n    b: parseInt(hex.slice(4, 6), 16),\n  };\n};\n\nexport const randomHexColor = () =>\n  Math.floor(Math.random() * 16777215).toString(16);\n\nexport const complementaryColor = (hex) => {\n  const padZero = (str) => (\"00\" + str).slice(-2);\n  const invertColor = (digit) => padZero((255 - digit).toString(16));\n  const { r, g, b } = getRGB(hex);\n\n  return invertColor(r) + invertColor(g) + invertColor(b);\n};\n\nexport const textColor = (hex) => {\n  const { r, g, b } = getRGB(hex);\n  const brightness = Math.round((r * 299 + g * 587 + b * 114) / 1000);\n\n  return brightness > 125 ? \"444444\" : \"efefef\";\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./home.css\";\n\nimport { projectInfo } from \"../../utils\";\nimport {\n  complementaryColor,\n  randomHexColor,\n  textColor,\n} from \"../../utils/color\";\n\nconst cardDetails = (project, color) => (\n  <>\n    <div\n      className=\"project-list-item-placeholder\"\n      style={{\n        backgroundColor: `#${color}`,\n      }}\n    >\n      <h2\n        className=\"project-list-item-title\"\n        style={{ color: `#${textColor(color)}` }}\n      >\n        {project.title}\n      </h2>\n    </div>\n\n    <p>{project.subtitle}</p>\n  </>\n);\n\nconst Home = () => (\n  <section>\n    <ul className=\"project-list\">\n      {projectInfo.map((project) => {\n        const borderColor = randomHexColor();\n        const complementaryBorderColor = complementaryColor(borderColor);\n        return (\n          <li\n            key={project.title}\n            className=\"project-list-item\"\n            style={{ borderColor: `#${borderColor}` }}\n          >\n            {project.absolute ? (\n              <a className=\"project-list-item-link\" href={project.link}>\n                {cardDetails(project, complementaryBorderColor)}\n              </a>\n            ) : (\n              <Link className=\"project-list-item-link\" to={project.link}>\n                {cardDetails(project, complementaryBorderColor)}\n              </Link>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  </section>\n);\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport withTracker from \"./GoogleAnalyticsTracker\";\n\nimport Recipes from \"./pages/recipes\";\nimport Recipe from \"./pages/recipe\";\nimport SpaceX from \"./pages/spacex\";\nimport NotFound from \"./pages/not-found\";\nimport Congress from \"./pages/congress\";\nimport CongressMembers from \"./pages/congress/members\";\nimport CongressMember from \"./pages/congress/member\";\nimport TopNav from \"./components/topnav\";\nimport Home from \"./pages/home\";\n\nconst App = () => {\n  return (\n    <>\n      <div role=\"banner\" className=\"vote-banner\">\n        Vote on November 3, 2020. More information at{\" \"}\n        <a\n          href=\"https://www.vote.org/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          vote.org\n        </a>\n      </div>\n      <header>\n        <h1 className=\"app-header\">Jim Segal Projects</h1>\n      </header>\n      <Router>\n        <article>\n          <TopNav />\n          <Switch>\n            <Route exact path=\"/\" component={withTracker(Home)} />\n            <Route\n              path=\"/congress/:chamber/members\"\n              component={withTracker(CongressMembers)}\n            />\n            <Route\n              path=\"/congress/:chamber/member/:id\"\n              component={withTracker(CongressMember)}\n            />\n            <Route path=\"/congress\" component={withTracker(Congress)} />\n            <Route path=\"/recipes\" component={withTracker(Recipes)} />\n            <Route path=\"/recipe/:recipeSlug\" component={withTracker(Recipe)} />\n            <Route path=\"/spacex\" component={withTracker(SpaceX)} />\n            <Route path=\"*\" component={withTracker(NotFound)} />\n          </Switch>\n        </article>\n      </Router>\n    </>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}