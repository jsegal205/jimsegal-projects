{"version":3,"sources":["GoogleAnalyticsTracker.js","utils/index.js","utils/useFetch.js","components/error/index.js","components/loading/index.js","components/search-filter/index.js","pages/recipes/index.js","pages/not-found/index.js","pages/recipe/index.js","pages/spacex/index.js","utils/windowDimensions.js","pages/congress/utils.js","pages/congress/index.js","pages/congress/members.js","pages/congress/member.js","components/topnav/index.js","utils/color.js","pages/home/index.js","pages/shorts/index.js","pages/mountian-goat/index.js","pages/dogetracker/index.js","pages/random-placeholder/sites.js","pages/random-placeholder/index.js","pages/tabletop/index.js","App.js","serviceWorker.js","index.js"],"names":["ReactGA","initialize","testMode","process","gaOptions","cookieDomain","withTracker","WrappedComponent","options","trackPage","page","set","pageview","HOC","props","useEffect","location","pathname","apiUrlBase","adminUrlBase","projectInfo","absolute","link","subtitle","title","sort","a","b","titleA","toUpperCase","titleB","useFetch","url","initialValue","useState","data","setData","loading","setLoading","fetchData","axios","get","response","message","error","status","Error","componentName","Loading","className","SearchFilter","handleResetClick","handleSearchChange","searchValue","htmlFor","type","id","value","onChange","onClick","Recipes","recipes","recipeSearch","setRecipeSearch","recipeList","setRecipeList","results","filter","recipe","toLowerCase","includes","length","event","target","map","to","slug","state","NotFound","Recipe","pathNameSplit","split","getSlug","referenceLink","ingredients","directions","notes","href","rel","navigator","clipboard","writeText","replace","source","SpaceX","upcomingLaunch","calcTimeToLaunch","timeLeft","timeCalculated","current","date_unix","difference","Date","now","days","Math","floor","hours","minutes","seconds","useRef","timeToLaunch","setTimeToLaunch","timer","setTimeout","clearTimeout","timerComponents","Object","keys","forEach","interval","push","launchDate","date_utc","toLocaleString","weekday","year","month","day","hour","minute","mission_name","rocket_name","launchpad","details","launchDetails","getWindowDimensions","window","height","innerHeight","width","innerWidth","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","chamberTitles","chamber","otherChamber","partyName","abbreviation","properCase","charAt","slice","Congress","congress","keyMap","D","F","M","R","house","senate","genericLabel","label","chamberAgeChart","distribution","chamberData","age","barGap","barCategoryGap","margin","top","right","left","bottom","strokeDasharray","dataKey","position","allowDecimals","verticalAlign","stackId","fill","name","ageSection","ageLabel","average","all","democrat","republican","female","male","detailedAge","key","full_name","date_of_birth","gender","party","genderSection","genderData","total","women","percentWomen","men","percentMen","partySection","partyChart","color","outerRadius","entry","chamberSection","CongressMembers","getChamber","members","memberSearch","setMemberSearch","memberList","setMemberList","member","first_name","last_name","match","addDefaultSrc","src","alt","onError","Member","getUrlParams","current_party","twitter_account","next_election","terms","initial_elected_in","most_recent_vote","careerVoting","termInfo","misconduct","m","allegation","first_date","allegationCategories","join","currentStatus","text","careerVotesEligible","careerVotesCast","careerMissedVotes","careerPresentVotes","careerVotesWithParty","careerVotesAgainstParty","term","start_date","end_date","total_votes","missed_votes","total_present","votesWithParty","votesAgainstParty","TopNav","withRouter","getRGB","hex","r","parseInt","g","textColor","round","cardDetails","project","style","backgroundColor","Home","borderColor","random","toString","complementaryBorderColor","invertColor","digit","complementaryColor","Shorts","probability","criteria","crit","defaultGameState","players","mountainPeaks","size","points","goats","bonusPoints","setup","maxPlayers","diceRolls","winConditions","peaksEmpty","gameStarted","currentPlayer","showRules","history","showHistory","gameFinished","MountainGoat","gameState","setGameState","AddPlayer","playerName","setPlayerName","blankPlayerName","trim","dupeName","player","e","disabled","newPlayer","number","totalPoints","peaksSummited","PlayerTurn","peakValues","playerNumber","rolls","showOutcomes","stagedRolls","toBeStaged","currentTurn","setCurrentTurn","d1","d2","d3","d4","rollNum","ceil","staged","checked","diceKey","s","stagingRolls","JSON","parse","stringify","stage","idx","reduce","acc","stagedRoll","display","workingMountains","find","turnHistory","currentPosition","concat","nextPlayer","workingPlayers","currentPlayerIdx","findIndex","p","peaksOutOfPoints","curr","getsBonus","values","every","currentSummit","workingBonusPoints","shift","orderedPlayers","allCombos","combo","sum","peak","combos","possiblePaths","getGoatsByPeak","next","textAlign","defaultGoatState","peakSize","bonusPoint","DogeTracker","market_data","current_price","usd","btc","siteBase","apiLink","delimiter","defaultPlaceholder","h","w","RandomPlaceholder","dimensions","setDimensions","placeholder","setPlaceholder","setError","baseIdx","baseSrc","renderPlaceholder","Tabletop","tableTopData","tabletopSearch","setTabletopSearch","gameList","setGameList","game","randomGameIndex","image","App","exact","path","component","CongressMember","Boolean","hostname","Sentry","dsn","autoSessionTracking","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.532757c4.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize(\"UA-45142145-1\", {\n  testMode: process.env.NODE_ENV === \"test\",\n  gaOptions: {\n    cookieDomain: \"auto\",\n  },\n});\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    ReactGA.set({\n      page,\n      ...options,\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = (props) => {\n    useEffect(\n      () => trackPage(props.location.pathname),\n      [props.location.pathname]\n    );\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","export const apiUrlBase = \"https://api.jimsegal.com\";\n// export const apiUrlBase = \"http://localhost:8001\";\n\nexport const adminUrlBase = \"https://admin.jimsegal.com\";\n// export const adminUrlBase = \"http://localhost:1337\";\n\nexport const projectInfo = [\n  {\n    absolute: true,\n    link: \"https://jimsegal.com\",\n    subtitle: \"\",\n    title: \"JimSegal.com\",\n  },\n  {\n    link: \"/congress\",\n    subtitle: \"Some fun data surrounding the current congressional sesssion\",\n    title: \"Congress\",\n  },\n  {\n    link: \"/isJimWearingShorts\",\n    subtitle: \"A site to predict if Jim is wearing shorts or not\",\n    title: \"Is Jim Wearing Shorts?\",\n  },\n  {\n    link: \"mountaingoat\",\n    subtitle: \"Digital game\",\n    title: \"Mountain Goat Game\",\n  },\n  {\n    link: \"/recipes\",\n    subtitle: \"A bunch of recipes that I frequent and wanted to show off\",\n    title: \"Recipes\",\n  },\n  {\n    link: \"/spacex\",\n    subtitle: \"A countdown timer until the next launch of a Space X rocket\",\n    title: \"Space X\",\n  },\n  {\n    absolute: true,\n    link: \"https://jimsegal.com/IsChicagoColderThanAnchorage/\",\n    subtitle:\n      \"A way to quickly tell if Chicago, IL is colder than Anchorage, AK\",\n    title: \"Is Chicago Colder Than Anchorage?\",\n  },\n  {\n    absolute: true,\n    link: \"https://jimsegal.com/readinglist/\",\n    subtitle: \"Books I have read or listened to\",\n    title: \"Reading List\",\n  },\n  {\n    absolute: true,\n    link: \"https://jimsegal.com/travel/\",\n    subtitle: \"Places that I have traveled since graduating college in 2008\",\n    title: \"Travels\",\n  },\n  {\n    link: \"/tabletop\",\n    subtitle: \"My collection of table top games\",\n    title: \"Tabletop Games\",\n  },\n  {\n    link: \"/dogetracker\",\n    subtitle:\n      \"Get the current price of the hottest LEGITIMATE cryptocurrency out there\",\n    title: \"Dogecoin Price Tracker\",\n  },\n  {\n    link: \"/random-placeholder\",\n    subtitle: \"When you are overwhelmed by placeholder images\",\n    title: \"Random Placeholder\",\n  },\n].sort(function (a, b) {\n  const titleA = a.title.toUpperCase();\n  const titleB = b.title.toUpperCase();\n  if (titleA === \"JIMSEGAL.COM\" || titleB === \"JIMSEGAL.COM\") {\n    return 1;\n  }\n  if (titleA < titleB) {\n    return -1;\n  }\n  if (titleA > titleB) {\n    return 1;\n  }\n\n  return 0;\n});\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// custom hook for performing GET request\nconst useFetch = (url, initialValue) => {\n  const [data, setData] = useState(initialValue);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(url);\n        setData(response.data);\n      } catch ({ message, response }) {\n        setData({ error: message, status: response ? response.status : \"500\" });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return { loading, data };\n};\n\nexport default useFetch;\n","import React from \"react\";\n\nconst Error = ({ componentName }) => (\n  <section>\n    <h3>\n      Whoops! There was a problem loading{\" \"}\n      {componentName ? `${componentName} data.` : \"data.\"}\n    </h3>\n    <p>Please reload browser to try again in a little bit.</p>\n  </section>\n);\n\nexport default Error;\n","import React from \"react\";\n\nimport \"./loading.css\";\n\nconst Loading = () => (\n  <section className=\"loader\">\n    <div className=\"loader-wheel\"></div>\n    <div className=\"loader-text\">Loading</div>\n  </section>\n);\n\nexport default Loading;\n","import React from \"react\";\n\nimport \"./search-filter.css\";\n\nconst SearchFilter = ({\n  handleResetClick,\n  handleSearchChange,\n  searchValue,\n}) => (\n  <section className=\"search-filter-container\">\n    <label htmlFor=\"search-filter\">Search</label>\n    <input\n      type=\"text\"\n      id=\"search-filter\"\n      className=\"search-filter-input\"\n      value={searchValue}\n      onChange={handleSearchChange}\n      data-testid=\"search-filter\"\n    />\n    {searchValue && (\n      <button\n        className=\"search-filter-reset\"\n        onClick={handleResetClick}\n        data-testid=\"search-filter-reset\"\n      >\n        Reset\n      </button>\n    )}\n  </section>\n);\n\nexport default SearchFilter;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { adminUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./recipes.css\";\nimport Loading from \"../../components/loading\";\nimport SearchFilter from \"../../components/search-filter\";\n\nconst Recipes = () => {\n  const { loading, data: recipes } = useFetch(`${adminUrlBase}/recipes`);\n\n  const [recipeSearch, setRecipeSearch] = useState(\"\");\n  const handleSearchChange = (event) => {\n    setRecipeSearch(event.target.value);\n  };\n  const handleResetClick = () => {\n    setRecipeSearch(\"\");\n  };\n\n  const [recipeList, setRecipeList] = useState([]);\n  useEffect(() => {\n    if (!loading && recipes) {\n      if (recipes.error) {\n        setRecipeList([]);\n        return;\n      }\n\n      const results = recipes.filter((recipe) =>\n        recipe.title.toLowerCase().includes(recipeSearch.toLowerCase())\n      );\n      setRecipeList(results);\n    }\n  }, [loading, recipes, recipeSearch]);\n\n  return (\n    <section>\n      <h2>Recipes</h2>\n      {loading && <Loading />}\n      {recipes && recipes.error && <Error componentName=\"Recipes\" />}\n      {recipes && recipes.length && (\n        <>\n          <SearchFilter\n            searchValue={recipeSearch}\n            handleResetClick={handleResetClick}\n            handleSearchChange={handleSearchChange}\n          />\n          {recipeList.length ? (\n            <ul className=\"recipes-list\" data-testid=\"recipes-list\">\n              {recipeList.map((recipe) => (\n                <li key={recipe.slug}>\n                  <Link\n                    to={{\n                      pathname: `/recipe/${recipe.slug}`,\n                      state: { ...recipe },\n                    }}\n                  >\n                    {recipe.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"recipes-no-results\">\n              No results for{\" \"}\n              <strong>\n                <em>{recipeSearch}</em>\n              </strong>\n            </div>\n          )}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Recipes;\n","import React from \"react\";\nimport \"../../App.css\";\n\nconst NotFound = () => <h1>Not Found</h1>;\n\nexport default NotFound;\n","import React from \"react\";\nimport { adminUrlBase } from \"../../utils\";\n\nimport ReactMarkdown from \"react-markdown\";\n\nimport useFetch from \"../../utils/useFetch\";\nimport NotFound from \"../not-found\";\nimport Error from \"../../components/error\";\nimport Loading from \"../../components/loading\";\n\nimport \"../../App.css\";\nimport \"./recipe.css\";\nimport { Link } from \"react-router-dom\";\n\nconst getSlug = ({ pathname, state }) => {\n  if (state && state.slug) {\n    // came from /recipes\n    return state.slug;\n  }\n\n  // didn't come from /recipes\n  const pathNameSplit = pathname.split(\"/\");\n  return pathNameSplit[pathNameSplit.length - 1];\n};\n\nconst Recipe = (props) => {\n  const slug = getSlug(props.location);\n  const { loading, data: recipe } = useFetch(`${adminUrlBase}/recipes/${slug}`);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (recipe.status === 404) {\n    return <NotFound />;\n  }\n\n  if (recipe.error) {\n    return <Error componentName=\"Recipe\" />;\n  }\n\n  const { title, referenceLink, ingredients, directions, notes } = recipe;\n\n  return (\n    <section>\n      <div className=\"recipe-back\">\n        <Link to=\"/recipes\">All Recipes</Link>\n      </div>\n      <h2>{title}</h2>\n      {referenceLink && (\n        <small>\n          <a href={referenceLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            Original Reference\n          </a>\n        </small>\n      )}\n      <h3>Ingredients</h3>\n      <button\n        data-testid=\"copy-ingredients\"\n        onClick={() => {\n          navigator.clipboard.writeText(ingredients.replace(/-\\s/gm, \"\"));\n        }}\n      >\n        Copy Ingredients\n      </button>\n      <div className=\"ingredients\">\n        <ReactMarkdown source={ingredients} />\n      </div>\n      <h3>Directions</h3>\n      <div className=\"directions\">\n        <ReactMarkdown source={directions} />\n      </div>\n      {notes && [\n        <h3 key=\"notes-header\">Notes</h3>,\n        <div key=\"notes-desc\">\n          <ReactMarkdown source={notes} />\n        </div>,\n      ]}\n    </section>\n  );\n};\n\nexport default Recipe;\n","import React, { useEffect, useState, Fragment, useRef } from \"react\";\n\nimport useFetch from \"../../utils/useFetch\";\nimport Error from \"../../components/error\";\nimport { apiUrlBase } from \"../../utils\";\n\nimport \"../../App.css\";\nimport \"./spacex.css\";\nimport Loading from \"../../components/loading\";\n\nconst SpaceX = () => {\n  const { loading, data: upcomingLaunch } = useFetch(\n    `${apiUrlBase}/spacex/next`\n  );\n\n  const calcTimeToLaunch = () => {\n    let timeLeft = {};\n    if (!loading && timeCalculated.current) {\n      if (upcomingLaunch.error) {\n        return timeLeft;\n      }\n\n      if (upcomingLaunch.date_unix) {\n        const difference = upcomingLaunch.date_unix - Date.now() / 1000;\n\n        if (difference > 0) {\n          timeLeft = {\n            days: Math.floor(difference / (60 * 60 * 24)),\n            hours: Math.floor((difference / (60 * 60)) % 24),\n            minutes: Math.floor((difference / 60) % 60),\n            seconds: Math.floor(difference % 60),\n          };\n        }\n      }\n    }\n    return timeLeft;\n  };\n\n  const timeCalculated = useRef(false);\n  const [timeToLaunch, setTimeToLaunch] = useState(calcTimeToLaunch());\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (!timeCalculated.current) {\n        timeCalculated.current = true;\n      }\n      setTimeToLaunch(calcTimeToLaunch());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n\n  const timerComponents = [];\n\n  Object.keys(timeToLaunch).forEach((interval) => {\n    if (interval !== \"seconds\" && !timeToLaunch[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <div key={interval}>\n        {timeToLaunch[interval]} {interval}{\" \"}\n      </div>\n    );\n  });\n\n  const launchDetails = () => {\n    if (!timeCalculated.current) {\n      return null;\n    }\n\n    const options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n    };\n\n    const launchDate = new Date(upcomingLaunch.date_utc).toLocaleString(\n      \"en-US\",\n      options\n    );\n    return (\n      <Fragment key={upcomingLaunch.mission_name}>\n        <div className=\"spacex-mega\">{timerComponents}</div>\n        <h3>{upcomingLaunch.mission_name}</h3>\n        <div className=\"spacex-item\">\n          <label>When:</label>\n          <span>{launchDate}</span>\n        </div>\n        <div className=\"spacex-item\">\n          <label>Rocket:</label>\n          <span>{upcomingLaunch.rocket_name}</span>\n        </div>\n        <div className=\"spacex-item\">\n          <label>Launch Site:</label>\n          <span>{upcomingLaunch.launchpad}</span>\n        </div>\n        <div className=\"spacex-details\">{upcomingLaunch.details}</div>\n      </Fragment>\n    );\n  };\n\n  return (\n    <section className=\"spacex-container\">\n      <h2>Next Space X Launch</h2>\n      {(loading || !timeCalculated.current) &&\n        !(upcomingLaunch && upcomingLaunch.error) && <Loading />}\n      {upcomingLaunch && upcomingLaunch.error && (\n        <Error componentName=\"SpaceX\" />\n      )}\n\n      {!loading && !upcomingLaunch.error && launchDetails()}\n    </section>\n  );\n};\n\nexport default SpaceX;\n","import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerHeight: height, innerWidth: width } = window;\n  return { height, width };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nexport default useWindowDimensions;\n","export const chamberTitles = (chamber) => {\n  switch (chamber) {\n    case \"house\":\n      return \"Representatives\";\n    case \"senate\":\n      return \"Senators\";\n    default:\n      return \"Members\";\n  }\n};\n\nexport const individualChamberTitle = (chamber) => {\n  const pluralTitle = chamberTitles(chamber);\n  return pluralTitle.substring(0, pluralTitle.length - 1);\n};\n\nexport const otherChamber = (chamber) =>\n  chamber === \"house\" ? \"senate\" : \"house\";\n\nexport const partyName = (abbreviation) => {\n  switch (abbreviation.toLowerCase()) {\n    case \"d\":\n      return \"Democrat\";\n    case \"r\":\n      return \"Republican\";\n    case \"i\":\n      return \"Independent\";\n    default:\n      return \"\";\n  }\n};\n\nexport const properCase = (value) =>\n  !!value ? value.charAt(0).toUpperCase() + value.slice(1) : \"\";\n","import React from \"react\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport useWindowDimensions from \"../../utils/windowDimensions\";\nimport { chamberTitles, properCase } from \"./utils\";\n\nimport Error from \"../../components/error\";\nimport Loading from \"../../components/loading\";\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  PieChart,\n  Pie,\n  Cell,\n} from \"recharts\";\n\nimport \"../../App.css\";\nimport \"./congress.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Congress = () => {\n  const { loading, data: congress } = useFetch(`${apiUrlBase}/congress/stats`);\n  const { width } = useWindowDimensions();\n\n  const keyMap = {\n    D: \"democrat\",\n    F: \"female\",\n    M: \"male\",\n    R: \"republican\",\n    house: \"House of Representatives\",\n    senate: \"Senate\",\n  };\n\n  const genericLabel = (label, value) => (\n    <div>\n      {<label>{label}: </label>}\n      <span>{value}</span>\n    </div>\n  );\n\n  const chamberSection = (data, chamber) => (\n    <article key={chamber}>\n      <hr />\n      <h3>{keyMap[chamber]}</h3>\n      <Link\n        className=\"chamber-members\"\n        to={{\n          pathname: `/congress/${chamber}/members`,\n          state: { chamber },\n        }}\n      >\n        View Current {chamberTitles(chamber)}\n      </Link>\n      <section className=\"chamber\">\n        {!!data[chamber].age.distribution &&\n          chamberAgeChart(data[chamber].age.distribution)}\n        <section className=\"chamber-data\">\n          {ageSection(data[chamber].age, chamber)}\n          {genderSection(data[chamber].gender)}\n          {partySection(data[chamber].party)}\n        </section>\n      </section>\n    </article>\n  );\n  const chamberAgeChart = (distribution) => {\n    const chamberData = Object.keys(distribution).map((age) => {\n      return { ...distribution[age], age: age };\n    });\n\n    return (\n      <section className=\"chamber-chart\">\n        <h3>Distribution of age</h3>\n        <BarChart\n          width={width * 0.9}\n          height={400}\n          data={chamberData}\n          barGap={\"10%\"}\n          barCategoryGap={\"20%\"}\n          margin={{\n            top: 20,\n            right: 10,\n            left: 10,\n            bottom: 20,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"age\" label={{ value: \"Age\", position: \"bottom\" }} />\n          <YAxis allowDecimals={false} />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" />\n          <Bar\n            dataKey=\"D\"\n            stackId=\"a\"\n            fill=\"#0015BC\"\n            name={properCase(keyMap.D)}\n          />\n          <Bar\n            dataKey=\"R\"\n            stackId=\"a\"\n            fill=\"#E9141D\"\n            name={properCase(keyMap.R)}\n          />\n          <Bar\n            dataKey=\"M\"\n            stackId=\"b\"\n            fill=\"#00D136\"\n            name={properCase(keyMap.M)}\n          />\n          <Bar\n            dataKey=\"F\"\n            stackId=\"b\"\n            fill=\"#B533FF\"\n            name={properCase(keyMap.F)}\n          />\n        </BarChart>\n      </section>\n    );\n  };\n\n  const ageSection = (age, chamber) => (\n    <>\n      <section>\n        <h4>Average Age</h4>\n        {ageLabel(\"\", age.average.all)}\n\n        <section>\n          <h5>By Party</h5>\n          {ageLabel(properCase(keyMap.D), age.average.democrat)}\n          {ageLabel(properCase(keyMap.R), age.average.republican)}\n        </section>\n        <section>\n          <h5>By Gender</h5>\n          {ageLabel(properCase(keyMap.F), age.average.female)}\n          {ageLabel(properCase(keyMap.M), age.average.male)}\n        </section>\n      </section>\n      {detailedAge(age, \"youngest\", chamber)}\n      {detailedAge(age, \"oldest\", chamber)}\n    </>\n  );\n\n  const ageLabel = (label, age) => (\n    <div>\n      {label ? <label>{label}: </label> : \"\"}\n      <span>{age} years old</span>\n    </div>\n  );\n\n  const detailedAge = (data, key, chamber) => (\n    <section>\n      <h4>{properCase(key)} Member</h4>\n      <label>\n        <Link\n          to={{\n            pathname: `/congress/${chamber}/member/${data[key].id}`,\n            state: { ...data[key] },\n          }}\n        >\n          {data[key].full_name}\n        </Link>\n      </label>\n      {ageLabel(\"Age\", data[key].age)}\n      {genericLabel(\"Date of Birth\", data[key].date_of_birth)}\n      {genericLabel(\"State Representation\", data[key].state)}\n      {genericLabel(\"Gender\", properCase(keyMap[data[key].gender]))}\n      {genericLabel(\"Party\", properCase(keyMap[data[key].party]))}\n    </section>\n  );\n\n  const genderSection = (gender) => (\n    <section>\n      <h4>Number of Members by Gender</h4>\n      {genderData(gender)}\n    </section>\n  );\n\n  const genderData = (data) => (\n    <>\n      {genericLabel(\"Total\", data.total)}\n      {genericLabel(\n        properCase(keyMap.F),\n        `${data.women} (${data.percentWomen}%)`\n      )}\n      {genericLabel(properCase(keyMap.M), `${data.men} (${data.percentMen}%)`)}\n    </>\n  );\n\n  const partySection = (party) => (\n    <section className=\"congress-party-section\">\n      <h4>Number of Members by Party</h4>\n      {partyChart(party)}\n    </section>\n  );\n\n  const partyChart = (party) => {\n    const democrat = [\n      { name: \"Male\", value: party.D.men, color: \"#00D136\" },\n      { name: \"Female\", value: party.D.women, color: \"#B533FF\" },\n    ];\n    const republican = [\n      { name: \"Male\", value: party.R.men, color: \"#00D136\" },\n      { name: \"Female\", value: party.R.women, color: \"#B533FF\" },\n    ];\n\n    return (\n      <>\n        <div className=\"congress-party-chart-legend\">\n          <span className=\"congress-party-chart-legend-item congress-party-chart-legend-item-male\">\n            .\n          </span>\n          <span>Male</span>\n          <span className=\"congress-party-chart-legend-item congress-party-chart-legend-item-female\">\n            .\n          </span>\n          <span>Female</span>\n        </div>\n        <section className=\"congress-party-chart-section\">\n          <h4 className=\"congress-party-chart-section-header\">Democrats</h4>\n          <PieChart width={200} height={200}>\n            <Pie dataKey=\"value\" data={democrat} outerRadius={80}>\n              {democrat.map((entry) => (\n                <Cell fill={entry.color} key={entry.name} />\n              ))}\n            </Pie>\n            <Tooltip />\n          </PieChart>\n          {genderData(party.D)}\n        </section>\n        <section className=\"congress-party-chart-section\">\n          <h4 className=\"congress-party-chart-section-header\">Republicans</h4>\n          <PieChart width={200} height={200}>\n            <Pie dataKey=\"value\" data={republican} outerRadius={80}>\n              {republican.map((entry) => (\n                <Cell fill={entry.color} key={entry.name} />\n              ))}\n            </Pie>\n            <Tooltip />\n          </PieChart>\n          {genderData(party.R)}\n        </section>\n      </>\n    );\n  };\n\n  return (\n    <section>\n      <h2 className=\"congress-header\">Congressional Information</h2>\n      <article className=\"congress-citation\">\n        <span>Data provided by </span>\n        <a\n          href=\"https://projects.propublica.org/api-docs/congress-api/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Propublica Congress API\n        </a>\n      </article>\n      {loading && <Loading />}\n      {congress && congress.error && <Error componentName=\"Congress\" />}\n      {congress && !congress.error && (\n        <div className=\"congress\">\n          {[\"house\", \"senate\"].map((chamber) =>\n            chamberSection(congress, chamber)\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Congress;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport { chamberTitles, otherChamber, partyName } from \"./utils\";\n\nimport NotFound from \"../not-found\";\nimport Error from \"../../components/error\";\nimport Loading from \"../../components/loading\";\n\nimport \"../../App.css\";\nimport \"./congress.css\";\nimport SearchFilter from \"../../components/search-filter\";\n\nconst getChamber = ({ pathname, state }) => {\n  if (state && state.chamber) {\n    // came from internal link\n    return state.chamber;\n  }\n\n  // direct page load\n  const pathNameSplit = pathname.split(\"/\");\n  return pathNameSplit[pathNameSplit.length - 2];\n};\n\nconst CongressMembers = (props) => {\n  const chamber = getChamber(props.location);\n  const { loading, data: members } = useFetch(\n    `${apiUrlBase}/congress/${chamber}/members`\n  );\n\n  const [memberSearch, setMemberSearch] = useState(\"\");\n  const handleSearchChange = (event) => {\n    setMemberSearch(event.target.value);\n  };\n  const handleResetClick = () => {\n    setMemberSearch(\"\");\n  };\n\n  const [memberList, setMemberList] = useState([]);\n  useEffect(() => {\n    if (!loading && members) {\n      if (members.error || members.status === 404) {\n        setMemberList([]);\n        return;\n      }\n\n      const results = members[chamber]\n        ? members[chamber].filter(\n            (member) =>\n              member.first_name\n                .toLowerCase()\n                .includes(memberSearch.toLowerCase()) ||\n              member.last_name\n                .toLowerCase()\n                .includes(memberSearch.toLowerCase())\n          )\n        : [];\n      setMemberList(results);\n    }\n  }, [loading, members, chamber, memberSearch]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (members.status === 404 || !chamber.match(/^(house|senate)$/)) {\n    return <NotFound />;\n  }\n\n  if (members.error) {\n    return <Error componentName=\"Congress Memebers\" />;\n  }\n\n  const addDefaultSrc = (event) => {\n    event.target.src = \"/assets/congress-seal.png\";\n    event.target.alt = \"United States Seal of Congress\";\n  };\n\n  return (\n    <section>\n      <Link\n        className=\"chamber-members\"\n        to={{\n          pathname: `/congress`,\n        }}\n      >\n        All Congress Data\n      </Link>\n      <h2 className=\"congress-header\">Current {chamberTitles(chamber)}</h2>\n      <Link\n        className=\"chamber-members\"\n        to={{ pathname: `/congress/${otherChamber(chamber)}/members` }}\n      >\n        View Current {chamberTitles(otherChamber(chamber))}\n      </Link>\n      <hr />\n      <SearchFilter\n        searchValue={memberSearch}\n        handleResetClick={handleResetClick}\n        handleSearchChange={handleSearchChange}\n      />\n      {memberList.length ? (\n        <ul className=\"congress-members\" data-testid=\"members-list\">\n          {memberList.map((member) => {\n            return (\n              <li key={`${member.id}-${member.party}`}>\n                <Link\n                  to={{\n                    pathname: `/congress/${chamber}/member/${member.id}`,\n                    state: { ...member },\n                  }}\n                  className=\"congress-members-card\"\n                >\n                  <img\n                    src={`https://www.congress.gov/img/member/${member.id.toLowerCase()}.jpg`}\n                    alt={`Professional headshot of ${member.first_name} ${member.last_name}`}\n                    onError={addDefaultSrc}\n                  />\n                  <label>\n                    {member.first_name} {member.last_name}\n                  </label>\n                  {partyName(member.party)} - {member.state}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <div className=\"members-no-results\">\n          No results for{\" \"}\n          <strong>\n            <em>{memberSearch}</em>\n          </strong>\n        </div>\n      )}\n    </section>\n  );\n};\nexport default CongressMembers;\n","import React from \"react\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\n\nimport NotFound from \"../not-found\";\nimport Error from \"../../components/error\";\nimport Loading from \"../../components/loading\";\n\nimport \"../../App.css\";\nimport \"./congress.css\";\nimport { Link } from \"react-router-dom\";\nimport { partyName, properCase } from \"./utils\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst getUrlParams = ({ pathname, state }) => {\n  if (state && state.chamber && state.id) {\n    // came from internal link\n    return { chamber: state.chamber, id: state.id };\n  }\n\n  // direct page load\n  const pathNameSplit = pathname.split(\"/\");\n  return {\n    chamber: pathNameSplit[pathNameSplit.length - 3],\n    id: pathNameSplit[pathNameSplit.length - 1],\n  };\n};\n\nconst Member = (props) => {\n  const { chamber, id } = getUrlParams(props.location);\n\n  const { loading, data: member } = useFetch(\n    `${apiUrlBase}/congress/${chamber}/member/${id}`\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (member.status === 404 || !chamber.match(/^(house|senate)$/)) {\n    return <NotFound />;\n  }\n\n  if (member.error) {\n    return <Error componentName=\"Congress Memeber\" />;\n  }\n\n  const addDefaultSrc = (event) => {\n    event.target.src = \"/assets/congress-seal.png\";\n    event.target.alt = \"United States Seal of Congress\";\n  };\n\n  const {\n    age,\n    first_name,\n    last_name,\n    date_of_birth,\n    gender,\n    current_party,\n    url,\n    twitter_account,\n    state,\n    next_election,\n    terms,\n    initial_elected_in,\n    most_recent_vote,\n    careerVoting,\n    termInfo,\n    misconduct,\n  } = member;\n\n  return (\n    <section className=\"congress-member\">\n      <Link\n        to={{\n          pathname: `/congress/${chamber}/members`,\n          state: { chamber },\n        }}\n      >\n        Back to all members\n      </Link>\n      <h2>\n        {first_name} {last_name}\n      </h2>\n      <div className=\"headshot\">\n        <img\n          src={`https://www.congress.gov/img/member/${id.toLowerCase()}.jpg`}\n          alt={`Professional headshot of ${first_name} ${last_name}`}\n          onError={addDefaultSrc}\n        />\n      </div>\n      <section className=\"congress-member-links\">\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          Website\n        </a>\n\n        <a\n          href={`https://twitter.com/${twitter_account}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Twitter\n        </a>\n      </section>\n      <hr />\n      <article className=\"information\">\n        <section>\n          <ul>\n            <li>\n              <label>Most recent vote:</label> {most_recent_vote}\n            </li>\n            <li>\n              <label>Date of Birth:</label> {date_of_birth} (age: {age})\n            </li>\n            <li>\n              <label>Gender:</label> {gender}\n            </li>\n            <li>\n              <label>Current Party:</label> {partyName(current_party)}\n            </li>\n            <li>\n              <label>State Representing:</label> {state}\n            </li>\n            <li>\n              <label>Will be up for re-election in:</label> {next_election}\n            </li>\n            <li>\n              <p>\n                Has served <em>{terms}</em> terms starting initially elected\n                into office in <em>{initial_elected_in}</em>\n              </p>\n            </li>\n          </ul>\n        </section>\n\n        {!!misconduct.length && (\n          <section>\n            <h3>Official Misconduct Reports</h3>\n            <h4>\n              Data provided by{\" \"}\n              <a\n                href=\"https://github.com/govtrack/misconduct\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                GovTrack Congressional Misconduct DB\n              </a>\n            </h4>\n\n            {misconduct.map((m) => (\n              <ul key={m.first_date}>\n                <li>\n                  <label>Allegation:</label> {properCase(m.allegation)}\n                </li>\n                <li>\n                  <label>Initiated on:</label> {m.first_date}\n                </li>\n                <li>\n                  <label>Allegation Categories:</label>{\" \"}\n                  {m.allegationCategories.join(\", \")}\n                </li>\n                <li>\n                  <label>Current Status:</label> {properCase(m.currentStatus)}\n                </li>\n                <li>\n                  <ReactMarkdown source={m.text} />\n                </li>\n              </ul>\n            ))}\n          </section>\n        )}\n\n        <section>\n          <h3>Career Voting History</h3>\n          <ul>\n            <li>\n              <label>Total Votes Eligible:</label>{\" \"}\n              {careerVoting.careerVotesEligible}\n            </li>\n            <li>\n              <label>Total Cast Votes:</label> {careerVoting.careerVotesCast}\n            </li>\n            <li>\n              <label>Total Missed Votes:</label>{\" \"}\n              {careerVoting.careerMissedVotes}\n            </li>\n            <li>\n              <label>Total Present Votes:</label>{\" \"}\n              {careerVoting.careerPresentVotes}\n            </li>\n            <li>\n              <label>Total Votes With {partyName(current_party)} Party:</label>{\" \"}\n              {careerVoting.careerVotesWithParty}*\n            </li>\n            <li>\n              <label>\n                Total Votes Against {partyName(current_party)} Party:\n              </label>{\" \"}\n              {careerVoting.careerVotesAgainstParty}*\n            </li>\n          </ul>\n        </section>\n\n        <section>\n          <h3>Individual Term Voting Statistics</h3>\n\n          {termInfo.map((term) => {\n            const {\n              congress,\n              start_date,\n              end_date,\n              total_votes,\n              missed_votes,\n              party,\n              total_present,\n              votesWithParty,\n              votesAgainstParty,\n            } = term;\n            return (\n              <ul key={`${congress}-${party}`} className=\"term-info\">\n                <li>\n                  <label>Congressional Session:</label> {congress} - From{\" \"}\n                  {start_date} until {end_date}\n                </li>\n                {current_party !== party ? (\n                  <li>\n                    <label>Party:</label> {partyName(party)}\n                  </li>\n                ) : null}\n                <li>\n                  <label>Cast Votes:</label>{\" \"}\n                  {total_votes - missed_votes - total_present}\n                </li>\n                <li>\n                  <label>Votes With {partyName(party)} Party:</label>{\" \"}\n                  {votesWithParty}*\n                </li>\n                <li>\n                  <label>Votes Against {partyName(party)} Party:</label>{\" \"}\n                  {votesAgainstParty}*\n                </li>\n              </ul>\n            );\n          })}\n        </section>\n        <footer className=\"footnote\">\n          * - counts relating to votes with or against party might be off due to\n          rounding precision or insufficient historical data provided\n        </footer>\n      </article>\n    </section>\n  );\n};\nexport default Member;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport \"./topnav.css\";\n\nconst TopNav = (props) =>\n  props.location.pathname === \"/\" ? null : (\n    <>\n      <nav>\n        <ul className=\"topnav-list\">\n          <li className=\"topnav-list-item\">\n            <Link title=\"Projects that I like to work on\" to=\"/\">\n              All Projects\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <hr />\n    </>\n  );\n\nexport default withRouter((props) => <TopNav {...props} />);\n","const getRGB = (hex) => {\n  return {\n    r: parseInt(hex.slice(0, 2), 16),\n    g: parseInt(hex.slice(2, 4), 16),\n    b: parseInt(hex.slice(4, 6), 16),\n  };\n};\n\nexport const randomHexColor = () =>\n  Math.floor(Math.random() * 16777215).toString(16);\n\nexport const complementaryColor = (hex) => {\n  const padZero = (str) => (\"00\" + str).slice(-2);\n  const invertColor = (digit) => padZero((255 - digit).toString(16));\n  const { r, g, b } = getRGB(hex);\n\n  return invertColor(r) + invertColor(g) + invertColor(b);\n};\n\nexport const textColor = (hex) => {\n  const { r, g, b } = getRGB(hex);\n  const brightness = Math.round((r * 299 + g * 587 + b * 114) / 1000);\n\n  return brightness > 125 ? \"444444\" : \"efefef\";\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./home.css\";\n\nimport { projectInfo } from \"../../utils\";\nimport {\n  complementaryColor,\n  randomHexColor,\n  textColor,\n} from \"../../utils/color\";\n\nconst cardDetails = (project, color) => (\n  <>\n    <div\n      className=\"project-list-item-placeholder\"\n      style={{\n        backgroundColor: `#${color}`,\n      }}\n    >\n      <h2\n        className=\"project-list-item-title\"\n        style={{ color: `#${textColor(color)}` }}\n      >\n        {project.title}\n      </h2>\n    </div>\n\n    {!!project.subtitle ? <p>{project.subtitle}</p> : null}\n  </>\n);\n\nconst Home = () => (\n  <section>\n    <ul className=\"project-list\">\n      {projectInfo.map((project) => {\n        const borderColor = randomHexColor();\n        const complementaryBorderColor = complementaryColor(borderColor);\n        return (\n          <li\n            key={project.title}\n            className=\"project-list-item\"\n            style={{ borderColor: `#${borderColor}` }}\n          >\n            {project.absolute ? (\n              <a className=\"project-list-item-link\" href={project.link}>\n                {cardDetails(project, complementaryBorderColor)}\n              </a>\n            ) : (\n              <Link className=\"project-list-item-link\" to={project.link}>\n                {cardDetails(project, complementaryBorderColor)}\n              </Link>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  </section>\n);\n\nexport default Home;\n","import React from \"react\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\n\nimport Error from \"../../components/error\";\nimport Loading from \"../../components/loading\";\n\nimport \"../../App.css\";\n\nconst Shorts = () => {\n  const { loading, data: results } = useFetch(`${apiUrlBase}/shorts`);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (results.error) {\n    return <Error componentName={`\"Is Jim Wearing Shorts\"`} />;\n  }\n\n  return (\n    <section>\n      <h2>Is Jim wearing shorts?</h2>\n\n      <section>\n        <article>\n          There is a <strong>{results.probability}%</strong> chance he is.\n        </article>\n        <br />\n        <article>\n          Based on the following criteria:\n          <ul>\n            {results.criteria.map((crit) => (\n              <li key={crit.label}>\n                {crit.label}: {crit.value}\n              </li>\n            ))}\n          </ul>\n        </article>\n      </section>\n    </section>\n  );\n};\n\nexport default Shorts;\n","import React, { useState } from \"react\";\n\nimport \"./goat.css\";\n\nconst defaultGameState = {\n  players: [],\n  mountainPeaks: {\n    5: {\n      value: 5,\n      size: 4,\n      points: 10,\n      goats: {},\n    },\n    6: {\n      value: 6,\n      size: 4,\n      points: 9,\n      goats: {},\n    },\n    7: {\n      value: 7,\n      size: 3,\n      points: 8,\n      goats: {},\n    },\n    8: {\n      value: 8,\n      size: 3,\n      points: 7,\n      goats: {},\n    },\n    9: {\n      value: 9,\n      size: 2,\n      points: 6,\n      goats: {},\n    },\n    10: {\n      value: 10,\n      size: 2,\n      points: 5,\n      goats: {},\n    },\n  },\n  bonusPoints: [15, 12, 9, 6],\n  setup: {\n    maxPlayers: 4,\n    diceRolls: 4,\n  },\n  winConditions: {\n    peaksEmpty: 3,\n  },\n  gameStarted: false,\n  currentPlayer: -1,\n  showRules: true,\n  history: [],\n  showHistory: false,\n  gameFinished: false,\n};\n\nconst MountainGoat = () => {\n  const [gameState, setGameState] = useState(defaultGameState);\n\n  const AddPlayer = () => {\n    const [playerName, setPlayerName] = useState(\"\");\n\n    const blankPlayerName = playerName.trim() === \"\";\n    const dupeName = gameState.players\n      .map((player) => player.name)\n      .includes(playerName.trim());\n\n    if (gameState.players.length === gameState.setup.maxPlayers) {\n      return null;\n    }\n\n    const handleOnClick = () => {\n      const newPlayer = {\n        number: gameState.players.length + 1,\n        name: playerName,\n        totalPoints: 0,\n        peaksSummited: { 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0 },\n      };\n\n      if (!blankPlayerName && !dupeName) {\n        setGameState({\n          ...gameState,\n          players: [...gameState.players, newPlayer],\n          history: [...gameState.history, `${playerName} has joined`],\n        });\n      }\n    };\n\n    // add goat color choice\n    return (\n      <div>\n        <input\n          type=\"text\"\n          value={playerName}\n          onChange={(e) => setPlayerName(e.target.value)}\n        />\n        <button\n          className=\"add-new-player\"\n          disabled={blankPlayerName || dupeName}\n          onClick={handleOnClick}\n        >\n          Add new player\n        </button>\n\n        {blankPlayerName && (\n          <label className=\"error-text\">Please enter player name</label>\n        )}\n        {dupeName && <label className=\"error-text\">Name already taken</label>}\n      </div>\n    );\n  };\n\n  const PlayerTurn = ({ player, gameState, setGameState }) => {\n    const peakValues = Object.keys(gameState.mountainPeaks);\n    const [currentTurn, setCurrentTurn] = useState({\n      playerNumber: player.number,\n      rolls: {},\n      showOutcomes: false,\n      stagedRolls: [],\n      toBeStaged: [],\n    });\n\n    const rollTheDice = () => Math.ceil(Math.random() * Math.floor(6));\n\n    const possiblePaths = (rolls) => {\n      const allCombos = peakValues.reduce((acc, curr) => {\n        return { ...acc, [curr]: [] };\n      }, {});\n\n      // make this dynamic based on defaultSettings.diceRolls\n      const diceCombos = [\n        [\"d1\"],\n        [\"d2\"],\n        [\"d3\"],\n        [\"d4\"],\n        [\"d1\", \"d2\"],\n        [\"d1\", \"d3\"],\n        [\"d1\", \"d4\"],\n        [\"d1\", \"d2\", \"d3\"],\n        [\"d1\", \"d2\", \"d4\"],\n        [\"d1\", \"d3\", \"d4\"],\n        [\"d2\", \"d3\"],\n        [\"d2\", \"d4\"],\n        [\"d2\", \"d3\", \"d4\"],\n        [\"d3\", \"d4\"],\n        [\"d1\", \"d2\", \"d3\", \"d4\"],\n      ];\n\n      diceCombos.map((combo) => {\n        const sum = combo.reduce((acc, curr) => acc + rolls[curr].value, 0);\n        if (peakValues.includes(sum.toString())) {\n          return {\n            ...allCombos,\n            [sum]: allCombos[sum].push(combo),\n          };\n        }\n\n        return allCombos;\n      });\n\n      return (\n        <section className=\"possible-outcomes\">\n          {Object.keys(allCombos).map((peak) => (\n            <div key={peak} className=\"dice-combo\">\n              <h4>{peak}</h4>\n              {!allCombos[peak].length && <div>No matches</div>}\n              {!!allCombos[peak].length && (\n                <>\n                  <div>Select:</div>\n                  {allCombos[peak].map((combos) => (\n                    <div className=\"dice-combo-match\" key={combos.join(\",\")}>\n                      {combos.join(\" & \")}\n                    </div>\n                  ))}\n                </>\n              )}\n            </div>\n          ))}\n        </section>\n      );\n    };\n\n    return (\n      <>\n        <h3 className=\"current-player-name\">Current Player: {player.name}</h3>\n        {Object.keys(currentTurn.rolls).length === 0 && (\n          <section className=\"roll-the-dice\">\n            <button\n              onClick={() => {\n                const rolls = { d1: {}, d2: {}, d3: {}, d4: {} };\n                for (\n                  let rollNum = 0;\n                  rollNum < gameState.setup.diceRolls;\n                  rollNum++\n                ) {\n                  rolls[`d${rollNum + 1}`] = {\n                    value: rollTheDice(),\n                    staged: false,\n                    checked: false,\n                  };\n                }\n                setCurrentTurn({ ...currentTurn, rolls });\n\n                // TODO - figure this out why I can't send two state actions\n                // probably need to roll up `currentTurn` into overall `gameState`\n                // this will also\n                // -------------------------------------------------------------\n\n                // setGameState(() => ({\n                //   ...gameState,\n                //   history: [\n                //     ...gameState.history,\n                //     `${player.name} rolled ${Object.keys(rolls)\n                //       .map((rollKey) => rolls[rollKey].value)\n                //       .join(\", \")}`,\n                //   ],\n                // }));\n              }}\n            >\n              Roll {gameState.setup.diceRolls} dice\n            </button>\n          </section>\n        )}\n\n        {!!Object.keys(currentTurn.rolls).length && (\n          <>\n            <h3>Dice Rolls</h3>\n            {Object.keys(currentTurn.rolls).map((diceKey) => {\n              return (\n                <div key={diceKey}>\n                  <input\n                    type=\"checkbox\"\n                    value={diceKey}\n                    name={diceKey}\n                    id={diceKey}\n                    disabled={!!currentTurn.rolls[diceKey].staged}\n                    checked={!!currentTurn.rolls[diceKey].checked}\n                    onChange={(e) => {}}\n                    onClick={(e) => {\n                      let toBeStaged = [];\n                      if (currentTurn.toBeStaged.includes(e.target.value)) {\n                        toBeStaged = currentTurn.toBeStaged.filter(\n                          (s) => s !== e.target.value\n                        );\n                      } else {\n                        toBeStaged = [\n                          ...currentTurn.toBeStaged,\n                          e.target.value,\n                        ];\n                      }\n\n                      setCurrentTurn({\n                        ...currentTurn,\n                        rolls: {\n                          ...currentTurn.rolls,\n                          [diceKey]: {\n                            ...currentTurn.rolls[diceKey],\n                            checked: e.target.checked,\n                          },\n                        },\n                        toBeStaged,\n                      });\n                    }}\n                  />\n                  <label htmlFor={diceKey}>\n                    {diceKey} {\"->\"} {currentTurn.rolls[diceKey].value}\n                  </label>\n                </div>\n              );\n            })}\n            {/* show popup if all dice not used before submitting */}\n            <button\n              disabled={!currentTurn.toBeStaged.length}\n              onClick={() => {\n                const stagingRolls = JSON.parse(\n                  JSON.stringify(currentTurn.rolls)\n                );\n                currentTurn.toBeStaged.forEach((stage) => {\n                  stagingRolls[stage].checked = false;\n                  stagingRolls[stage].staged = true;\n                });\n\n                setCurrentTurn({\n                  ...currentTurn,\n                  rolls: stagingRolls,\n                  stagedRolls: [\n                    ...currentTurn.stagedRolls,\n                    currentTurn.toBeStaged,\n                  ],\n                  toBeStaged: [],\n                });\n              }}\n            >\n              Use selected\n            </button>\n            {!!currentTurn.stagedRolls.length && (\n              <section className=\"player-turn\">\n                <h4>Here are your grouped rolls</h4>\n                <div className=\"current-grouped-rolls\">\n                  {currentTurn.stagedRolls.map((stage, idx) => {\n                    const total = stage.reduce(\n                      (acc, current) => acc + currentTurn.rolls[current].value,\n                      0\n                    );\n                    const peakValues = Object.keys(gameState.mountainPeaks);\n\n                    return (\n                      <div key={idx} className=\"grouped-roll\">\n                        {stage.map((stagedRoll) => (\n                          <div key={stagedRoll}>\n                            {stagedRoll} {\"->\"}{\" \"}\n                            {currentTurn.rolls[stagedRoll].value}\n                          </div>\n                        ))}\n                        <label>Total: {total}</label>\n                        {!peakValues.includes(total.toString()) && (\n                          <label\n                            className=\"error-text\"\n                            style={{ display: \"block\" }}\n                          >\n                            This doesn't match a peak!\n                          </label>\n                        )}\n                        <button\n                          style={{ display: \"block\" }}\n                          onClick={() => {\n                            const stagingRolls = JSON.parse(\n                              JSON.stringify(currentTurn.rolls)\n                            );\n                            stage.forEach((stagedRoll) => {\n                              stagingRolls[stagedRoll].staged = false;\n                            });\n\n                            setCurrentTurn({\n                              ...currentTurn,\n                              rolls: stagingRolls,\n                              stagedRolls: currentTurn.stagedRolls.filter(\n                                (staged) => staged !== stage\n                              ),\n                            });\n                          }}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                <section className=\"finish-turn\">\n                  <button\n                    onClick={() => {\n                      const workingMountains = JSON.parse(\n                        JSON.stringify(gameState.mountainPeaks)\n                      );\n                      const currentPlayer = gameState.players.find(\n                        (player) => player.number === currentTurn.playerNumber\n                      );\n                      const turnHistory = [];\n\n                      currentTurn.stagedRolls.forEach((stage) => {\n                        const total = stage.reduce(\n                          (acc, current) =>\n                            acc + currentTurn.rolls[current].value,\n                          0\n                        );\n\n                        if (\n                          Object.keys(gameState.mountainPeaks).includes(\n                            total.toString()\n                          )\n                        ) {\n                          const { goats, size } = workingMountains[total];\n                          let currentPosition = -1;\n                          Object.keys(goats).forEach((key) => {\n                            if (goats[key].includes(currentPlayer.name)) {\n                              currentPosition = parseInt(key);\n                            }\n                          });\n\n                          if (currentPosition === size) {\n                            // add points when retaining summit\n                            if (workingMountains[total].points > 0) {\n                              workingMountains[total].points -= 1;\n                              currentPlayer.totalPoints += total;\n                              currentPlayer.peaksSummited[total] += 1;\n                              turnHistory.push(\n                                `${currentPlayer.name} scored ${total} points from staying at the summit`\n                              );\n                            }\n                            // else no more points at the top of this moutain\n                          } else {\n                            // remove goat from current position\n                            goats[currentPosition] = goats[\n                              currentPosition\n                            ].filter(\n                              (playerName) => playerName !== currentPlayer.name\n                            );\n\n                            if (\n                              currentPosition + 1 === size &&\n                              goats[currentPosition + 1].length > 0\n                            ) {\n                              turnHistory.push(\n                                `${\n                                  goats[currentPosition + 1]\n                                } was overthrown by ${\n                                  currentPlayer.name\n                                } on peak ${total}`\n                              );\n                              //overthrow current goat at summit\n                              goats[0] = goats[0].concat(\n                                goats[currentPosition + 1]\n                              );\n                              goats[currentPosition + 1] = [];\n                            }\n\n                            // move goat up one level\n                            goats[currentPosition + 1] = [\n                              ...goats[currentPosition + 1],\n                              currentPlayer.name,\n                            ];\n\n                            turnHistory.push(\n                              `${currentPlayer.name} moved up peak ${total}`\n                            );\n\n                            workingMountains[total].goats = goats;\n\n                            if (currentPosition + 1 === size) {\n                              if (workingMountains[total].points > 0) {\n                                // add points when moving to summit\n                                workingMountains[total].points -= 1;\n                                currentPlayer.totalPoints += total;\n                                currentPlayer.peaksSummited[total] += 1;\n                                turnHistory.push(\n                                  `${currentPlayer.name} scored ${total} points from reaching the summit of peak ${total}`\n                                );\n                              }\n                              // else no more points left to give out\n                            }\n                          }\n                        }\n                      });\n\n                      let nextPlayer = (gameState.currentPlayer += 1);\n                      if (nextPlayer > gameState.players.length - 1) {\n                        nextPlayer = 0;\n                      }\n                      const workingPlayers = JSON.parse(\n                        JSON.stringify(gameState.players)\n                      );\n\n                      const currentPlayerIdx = workingPlayers.findIndex(\n                        (p) => p.number === currentPlayer.number\n                      );\n\n                      workingPlayers[currentPlayerIdx] = currentPlayer;\n\n                      turnHistory.push(\n                        `${currentPlayer.name} finished turn`,\n                        `${\n                          gameState.players.find(\n                            (player) => player.number === nextPlayer + 1\n                          ).name\n                        } is starting their turn`\n                      );\n\n                      const peaksOutOfPoints = Object.keys(\n                        workingMountains\n                      ).reduce((acc, curr) => {\n                        return workingMountains[curr].points <= 0\n                          ? acc + 1\n                          : acc;\n                      }, 0);\n\n                      const allBonusCheck = (currentSummit) =>\n                        currentSummit >= 1 ||\n                        currentSummit >= 2 ||\n                        currentSummit >= 3 ||\n                        currentSummit >= 4;\n\n                      const getsBonus = Object.values(\n                        currentPlayer.peaksSummited\n                      ).every(allBonusCheck);\n\n                      const workingBonusPoints = gameState.bonusPoints;\n                      if (getsBonus) {\n                        currentPlayer.totalPoints += workingBonusPoints[0];\n                        turnHistory.push(\n                          `${currentPlayer.name} just scored ${workingBonusPoints[0]} bonus points!`\n                        );\n                        workingBonusPoints.shift();\n                      }\n\n                      const gameFinished =\n                        peaksOutOfPoints >=\n                          gameState.winConditions.peaksEmpty ||\n                        workingBonusPoints.length === 0;\n\n                      if (gameFinished) {\n                        const { name, totalPoints } = orderedPlayers()[0];\n                        turnHistory.push(\"Game Finished!\");\n                        debugger;\n                        turnHistory.push(\n                          `Congrats ${name} with ${totalPoints} points!`\n                        );\n                      }\n                      setGameState({\n                        ...gameState,\n                        players: workingPlayers,\n                        mountainPeaks: workingMountains,\n                        currentPlayer: nextPlayer,\n                        history: gameState.history.concat(turnHistory),\n                        bonusPoints: workingBonusPoints,\n                        gameFinished,\n                      });\n                    }}\n                  >\n                    Finish turn\n                  </button>\n                </section>\n              </section>\n            )}\n            {!currentTurn.showOutcomes && (\n              <div>\n                <hr />\n\n                <button\n                  onClick={() => {\n                    setCurrentTurn({ ...currentTurn, showOutcomes: true });\n                  }}\n                >\n                  Show All Possible Combinations\n                </button>\n              </div>\n            )}\n            {currentTurn.showOutcomes && (\n              <>\n                <hr />\n                <h3>Possible Groupings</h3>\n                <button\n                  onClick={() => {\n                    setCurrentTurn({ ...currentTurn, showOutcomes: false });\n                  }}\n                >\n                  Hide Possibilities\n                </button>\n\n                {possiblePaths(currentTurn.rolls)}\n              </>\n            )}\n          </>\n        )}\n      </>\n    );\n  };\n\n  const getGoatsByPeak = (peak, position) =>\n    gameState.mountainPeaks[peak].goats[position].join(\", \");\n\n  const orderedPlayers = () =>\n    gameState.players.sort((curr, next) => {\n      if (curr.totalPoints > next.totalPoints) {\n        return -1;\n      } else if (curr.totalPoints <= next.totalPoints) {\n        return 1;\n      }\n      return 0;\n    });\n\n  return (\n    <main>\n      <h2>Mountain Goat Game</h2>\n      <section>\n        This is my interpretation of{\" \"}\n        <a\n          href=\"https://www.boardgametables.com/products/gps-sequoia-and-mountain-goats\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Mountain Goats by Board Game Tables\n        </a>\n        .\n        <hr />\n        <strong>\n          This is still in active development and are likely to be issues (like\n          styling and usability on phone, try landscape mode if you run into\n          this). If you have any feedback, find any issues or have more ideas\n          for the game, please reach out to me at{\" \"}\n          <a\n            href=\"mailto:projects@jimsegal.com?subject=Mountain Goat Game Feedback!\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            projects@jimsegal.com\n          </a>\n          . Enjoy!\n        </strong>\n        <hr />\n      </section>\n      {/*\n      <section>\n        TODO:\n        <ul>\n          <li>game rules: double 1 rolled (chose any number)</li>\n          <li>style the shit out of it</li>\n          <li>pressing enter in add player input, adds player</li>\n          <li>cool animation for dice roll?</li>\n          <li>goat noise when goat moves</li>\n          <li>reset game button</li>\n        </ul>\n      </section> */}\n      <section>\n        <h3>\n          Rules\n          <button\n            className=\"toggle-rules\"\n            onClick={() => {\n              setGameState({\n                ...gameState,\n                showRules: !gameState.showRules,\n              });\n            }}\n          >\n            {gameState.showRules ? \"Hide\" : \"Show\"} Rules\n          </button>\n        </h3>\n        {gameState.showRules && (\n          <>\n            <ul>\n              <li>\n                You and up to {gameState.setup.maxPlayers - 1} friends can join\n                to play locally\n              </li>\n              <li>\n                On your turn, you will roll {gameState.setup.diceRolls} dice\n              </li>\n              <li>\n                You can then choose combinations of dice that add up to mountain\n                peaks (5 through 10)\n              </li>\n              <li>You do not have to use all the dice on you turn</li>\n\n              <li>\n                Points will be earned when reaching the summit of the mountain\n                or when rolling that peak value while currently holding the\n                summit\n              </li>\n              <li>\n                If there is an opposing goat at the summit when you are reaching\n                the summit, the opposing goat will be sent to the base of the\n                peak\n              </li>\n            </ul>\n            <h3>Game End</h3>\n\n            <ul>\n              <li>\n                When {gameState.winConditions.peaksEmpty} of the peak summits\n                have no point tokens left\n              </li>\n              <li>When all 4 of the bonus tokens are claimed </li>\n              {/* still TODO */}\n              <li>The goat with the most points, wins!</li>\n            </ul>\n          </>\n        )}\n        <hr />\n      </section>\n\n      {gameState.gameStarted && (\n        <section className=\"game-reset\">\n          <button\n            onClick={() => {\n              setGameState({ ...defaultGameState });\n            }}\n          >\n            Reset Game!\n          </button>\n        </section>\n      )}\n\n      {!!gameState.history.length && (\n        <section>\n          <h3>\n            Game Log\n            <button\n              className=\"toggle-rules\"\n              onClick={() => {\n                setGameState({\n                  ...gameState,\n                  showHistory: !gameState.showHistory,\n                });\n              }}\n            >\n              {gameState.showHistory ? \"Hide\" : \"Show\"} Log\n            </button>\n          </h3>\n\n          {gameState.showHistory && (\n            <ul>\n              {gameState.history.map((history, idx) => (\n                <li key={idx}>{history}</li>\n              ))}\n            </ul>\n          )}\n        </section>\n      )}\n\n      {!gameState.gameStarted && (\n        <section>\n          <h3>New Game</h3>\n\n          <AddPlayer />\n        </section>\n      )}\n\n      {!!gameState.players.length && (\n        <>\n          <h3 style={{ textAlign: \"center\" }}>Players</h3>\n          <div className=\"players-area\">\n            {gameState.players.map((player) => (\n              <div key={player.name} className=\"player\">\n                <h4>Goat {player.name}</h4>\n                <span>Points: {player.totalPoints}</span>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n\n      {!gameState.gameStarted && gameState.players.length > 1 && (\n        <section className=\"start-game\">\n          <button\n            onClick={() => {\n              const workingMountains = JSON.parse(\n                JSON.stringify(gameState.mountainPeaks)\n              );\n\n              Object.keys(workingMountains).forEach((peak) => {\n                const defaultGoatState = {\n                  0: gameState.players.map((player) => player.name),\n                };\n                for (\n                  let peakSize = 1;\n                  peakSize <= workingMountains[peak].size;\n                  peakSize++\n                ) {\n                  defaultGoatState[peakSize] = [];\n                }\n                workingMountains[peak] = {\n                  ...workingMountains[peak],\n                  goats: defaultGoatState,\n                };\n              });\n\n              setGameState({\n                ...gameState,\n                gameStarted: true,\n                currentPlayer: 0,\n                mountainPeaks: workingMountains,\n                history: [...gameState.history, \"Game Started\"],\n              });\n            }}\n          >\n            Start the game!\n          </button>\n        </section>\n      )}\n\n      {gameState.gameStarted && (\n        <section>\n          <h3 style={{ textAlign: \"center\" }}>Bonus Points</h3>\n          <div className=\"bonus-points\">\n            <div>\n              Bonus points can be claimed by reaching or maintaining the summit\n              of all the peaks. This can be claimed multiple times.\n            </div>\n            <div className=\"bonus-points-available\">\n              {gameState.bonusPoints.map((bonusPoint) => (\n                <h3 key={bonusPoint}>{bonusPoint}</h3>\n              ))}\n            </div>\n          </div>\n          <h3 style={{ textAlign: \"center\" }}>Game Board</h3>\n          <div className=\"game-board\">\n            <div className=\"peak\">\n              <h4>5</h4>\n              <div>Points tokens left: {gameState.mountainPeaks[5].points}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(5, 4)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(5, 3)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(5, 2)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(5, 1)}</div>\n              <div className=\"peak-point peak-zero\">{getGoatsByPeak(5, 0)}</div>\n            </div>\n            <div className=\"peak\">\n              <h4>6</h4>\n              <div>Points tokens left: {gameState.mountainPeaks[6].points}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(6, 4)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(6, 3)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(6, 2)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(6, 1)}</div>\n              <div className=\"peak-point peak-zero\">{getGoatsByPeak(6, 0)}</div>\n            </div>\n            <div className=\"peak\">\n              <h4>7</h4>\n              <div>Points tokens left: {gameState.mountainPeaks[7].points}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(7, 3)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(7, 2)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(7, 1)}</div>\n              <div className=\"peak-point peak-zero\">{getGoatsByPeak(7, 0)}</div>\n            </div>\n            <div className=\"peak\">\n              <h4>8</h4>\n              <div>Points tokens left: {gameState.mountainPeaks[8].points}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(8, 3)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(8, 2)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(8, 1)}</div>\n              <div className=\"peak-point peak-zero\">{getGoatsByPeak(8, 0)}</div>\n            </div>\n            <div className=\"peak\">\n              <h4>9</h4>\n              <div>Points tokens left: {gameState.mountainPeaks[9].points}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(9, 2)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(9, 1)}</div>\n              <div className=\"peak-point peak-zero\">{getGoatsByPeak(9, 0)}</div>\n            </div>\n            <div className=\"peak\">\n              <h4>10</h4>\n              <div>\n                Points tokens left: {gameState.mountainPeaks[10].points}\n              </div>\n              <div className=\"peak-point\">{getGoatsByPeak(10, 2)}</div>\n              <div className=\"peak-point\">{getGoatsByPeak(10, 1)}</div>\n              <div className=\"peak-point peak-zero\">\n                {getGoatsByPeak(10, 0)}\n              </div>\n            </div>\n          </div>\n\n          {!gameState.gameFinished && (\n            <PlayerTurn\n              player={gameState.players[gameState.currentPlayer]}\n              gameState={gameState}\n              setGameState={setGameState}\n            />\n          )}\n          {gameState.gameFinished && (\n            <section className=\"game-finished\">\n              <h2>Game Finished</h2>\n              <ol>\n                {orderedPlayers().map((player) => (\n                  <li key={player.number}>\n                    {player.name}: {player.totalPoints} points\n                  </li>\n                ))}\n              </ol>\n              <div>\n                If you liked this game, please consider supporting the creators\n                by{\" \"}\n                <a\n                  href=\"https://www.boardgametables.com/products/gps-sequoia-and-mountain-goats\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  purchasing Mountain Goats on Board Game Tables\n                </a>\n              </div>\n              <button\n                onClick={() => {\n                  setGameState({ ...defaultGameState });\n                }}\n              >\n                Play Again!\n              </button>\n            </section>\n          )}\n        </section>\n      )}\n    </main>\n  );\n};\n\nexport default MountainGoat;\n","import React from \"react\";\nimport useFetch from \"../../utils/useFetch\";\n\nimport Error from \"../../components/error\";\nimport Loading from \"../../components/loading\";\n\nimport \"../../App.css\";\nimport \"./dogecoin.css\";\n\nconst DogeTracker = () => {\n  const { loading, data: results } = useFetch(\n    `https://api.coingecko.com/api/v3/coins/dogecoin`\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (results.error) {\n    return <Error componentName={\"Dogecoin price tracker\"} />;\n  }\n\n  return (\n    <section className=\"doge-cointainer\">\n      <h2 className=\"doge-title\">What is Dogecoin's current price?</h2>\n\n      <section className=\"doge-cointainer\">\n        <img\n          className=\"doge-image\"\n          src=\"https://i.imgur.com/jEll6Tr.gif\"\n          alt=\"a spinning coin with with the official dogecoin logo on one side and a shiba inu with the word WOW embossed on the coin\"\n        />\n        <h3 className=\"doge-price\">\n          $ {results.market_data.current_price.usd} (USD)\n        </h3>\n        <h3 className=\"doge-price\">\n          {results.market_data.current_price.btc} (Bitcoin)\n        </h3>\n      </section>\n    </section>\n  );\n};\n\nexport default DogeTracker;\n","const siteBase = {\n  \"https://placeholder.com\": {\n    apiLink: \"https://via.placeholder.com/\",\n    delimiter: \"x\",\n  },\n  \"https://baconmockup.com/\": {\n    delimiter: \"/\",\n  },\n  \"https://placebear.com/\": {\n    delimiter: \"/\",\n  },\n  \"http://placebeard.it/\": {\n    delimiter: \"/\",\n  },\n  \"http://placekitten.com/\": {\n    delimiter: \"/\",\n  },\n  \"https://www.placecage.com/\": {\n    delimiter: \"/\",\n  },\n  \"https://www.fillmurray.com/\": {\n    delimiter: \"/\",\n  },\n  \"https://www.stevensegallery.com/\": {\n    delimiter: \"/\",\n  },\n};\n\nexport default siteBase;\n","import React, { useState } from \"react\";\nimport siteBase from \"./sites\";\n\nimport \"./placeholder.css\";\n\nconst defaultPlaceholder = { key: \"\", h: \"\", w: \"\" };\n\nconst RandomPlaceholder = () => {\n  const [dimensions, setDimensions] = useState({ height: \"\", width: \"\" });\n  const [placeholder, setPlaceholder] = useState(defaultPlaceholder);\n  const [error, setError] = useState(false);\n\n  const renderPlaceholder = () => {\n    if (!placeholder.key) {\n      return null;\n    }\n\n    const baseSrc = siteBase[placeholder.key].apiLink\n      ? siteBase[placeholder.key].apiLink\n      : placeholder.key;\n\n    return (\n      <div className=\"placeholder\" data-testid=\"placeholder-image\">\n        This placeholder by{\" \"}\n        <a href={placeholder.key} target=\"_blank\" rel=\"noopener noreferrer\">\n          {placeholder.key}\n        </a>\n        <img\n          src={`${baseSrc}${placeholder.w}${\n            siteBase[placeholder.key].delimiter\n          }${placeholder.h}`}\n          alt={`placeholder sourced from ${placeholder.key}`}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <section>\n      Overwhelmed with the placeholder image sites for your designs? Let me\n      aggregrate all the favorites!\n      <div className=\"dimensions\">\n        <h3>Enter dimensions</h3>\n        <div>\n          <div className=\"input\">\n            <div className=\"col one-third\">\n              <label>Height:</label>\n            </div>\n            <div className=\"col two-third\">\n              <input\n                data-testid=\"placeholder-height\"\n                type=\"number\"\n                className={`${\n                  error && !dimensions.height ? \"placeholder-input-error\" : \"\"\n                }`}\n                value={dimensions.height}\n                onChange={(e) =>\n                  setDimensions({ ...dimensions, height: e.target.value })\n                }\n              />\n              <label>(px)</label>\n            </div>\n          </div>\n          <div className=\"input\">\n            <div className=\"col one-third\">\n              <label>Width:</label>\n            </div>\n            <div className=\"col two-third\">\n              <input\n                data-testid=\"placeholder-width\"\n                type=\"number\"\n                className={`${\n                  error && !dimensions.width ? \"placeholder-input-error\" : \"\"\n                }`}\n                value={dimensions.width}\n                onChange={(e) =>\n                  setDimensions({ ...dimensions, width: e.target.value })\n                }\n              />\n              <label>(px)</label>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"placeholder-btn\"\n          data-testid=\"placeholder-submit\"\n          onClick={() => {\n            if (!dimensions.height || !dimensions.width) {\n              setError(true);\n              setPlaceholder(defaultPlaceholder);\n            } else {\n              setError(false);\n              const baseIdx = Math.floor(\n                Math.random() * Object.keys(siteBase).length\n              );\n              setPlaceholder({\n                key: Object.keys(siteBase)[baseIdx],\n                h: dimensions.height,\n                w: dimensions.width,\n              });\n            }\n          }}\n        >\n          Get Random Placeholder Image\n        </button>\n        {error && (\n          <div className=\"placeholder-error\" data-testid=\"placeholder-error\">\n            Please enter height and width\n          </div>\n        )}\n      </div>\n      {renderPlaceholder()}\n    </section>\n  );\n};\n\nexport default RandomPlaceholder;\n","import React, { useEffect, useState } from \"react\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./tabletop.css\";\nimport Loading from \"../../components/loading\";\nimport SearchFilter from \"../../components/search-filter\";\n\nconst Tabletop = () => {\n  const { loading, data: tableTopData } = useFetch(`${apiUrlBase}/games`);\n\n  const [tabletopSearch, setTabletopSearch] = useState(\"\");\n  const handleSearchChange = (event) => {\n    setTabletopSearch(event.target.value);\n  };\n  const handleResetClick = () => {\n    setTabletopSearch(\"\");\n  };\n\n  const handleRandomGameClick = () => {\n    setTabletopSearch(\"\");\n\n    const randomGameIndex = Math.floor(\n      Math.random() * Math.floor(tableTopData.length - 1)\n    );\n\n    setTabletopSearch(tableTopData[randomGameIndex].title);\n  };\n\n  const [gameList, setGameList] = useState([]);\n  useEffect(() => {\n    if (!loading && tableTopData) {\n      if (tableTopData.error) {\n        setGameList([]);\n        return;\n      }\n\n      const results = tableTopData.filter((game) =>\n        game.title.toLowerCase().includes(tabletopSearch.toLowerCase())\n      );\n      setGameList(results);\n    }\n  }, [loading, tableTopData, tabletopSearch]);\n\n  return (\n    <section>\n      <h2>My Tabletop Games</h2>\n      {loading && <Loading />}\n      {tableTopData && tableTopData.error && <Error componentName=\"Tabletop\" />}\n      {tableTopData && tableTopData.length && (\n        <>\n          <div className=\"tabletop-actions\">\n            <SearchFilter\n              searchValue={tabletopSearch}\n              handleResetClick={handleResetClick}\n              handleSearchChange={handleSearchChange}\n            />\n            <div className=\"random-game-container\">\n              <label>Number of Games: {gameList.length}</label>\n              <button\n                className=\"random-game\"\n                data-testid=\"random-game\"\n                onClick={handleRandomGameClick}\n              >\n                Random Game\n              </button>\n            </div>\n          </div>\n\n          {gameList.length ? (\n            <section className=\"tabletop-cards\" data-testid=\"tabletop-cards\">\n              {gameList.map((game) => (\n                <article key={game.title}>\n                  <a\n                    className=\"card\"\n                    href={game.link}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <img\n                      className=\"card-img\"\n                      src={game.image}\n                      alt={`${game.title} Cover Artwork`}\n                    />\n                    <h3>{game.title}</h3>\n                  </a>\n                </article>\n              ))}\n            </section>\n          ) : (\n            <div className=\"tabletop-no-results\">\n              No results for{\" \"}\n              <strong>\n                <em>{tabletopSearch}</em>\n              </strong>\n            </div>\n          )}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Tabletop;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport withTracker from \"./GoogleAnalyticsTracker\";\n\nimport Recipes from \"./pages/recipes\";\nimport Recipe from \"./pages/recipe\";\nimport SpaceX from \"./pages/spacex\";\nimport NotFound from \"./pages/not-found\";\nimport Congress from \"./pages/congress\";\nimport CongressMembers from \"./pages/congress/members\";\nimport CongressMember from \"./pages/congress/member\";\nimport TopNav from \"./components/topnav\";\nimport Home from \"./pages/home\";\nimport Shorts from \"./pages/shorts\";\nimport MountainGoat from \"./pages/mountian-goat\";\nimport DogeTracker from \"./pages/dogetracker\";\nimport RandomPlaceholder from \"./pages/random-placeholder\";\nimport Tabletop from \"./pages/tabletop\";\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <header>\n          <h1 className=\"app-header\">Jim Segal Projects</h1>\n          <TopNav />\n        </header>\n        <article>\n          <Switch>\n            <Route exact path=\"/\" component={withTracker(Home)} />\n            <Route\n              path=\"/congress/:chamber/members\"\n              component={withTracker(CongressMembers)}\n            />\n            <Route\n              path=\"/congress/:chamber/member/:id\"\n              component={withTracker(CongressMember)}\n            />\n            <Route path=\"/congress\" component={withTracker(Congress)} />\n            <Route path=\"/dogetracker\" component={withTracker(DogeTracker)} />\n            <Route path=\"/isJimWearingShorts\" component={withTracker(Shorts)} />\n            <Route path=\"/mountaingoat\" component={withTracker(MountainGoat)} />\n            <Route\n              path=\"/random-placeholder\"\n              component={withTracker(RandomPlaceholder)}\n            />\n            <Route path=\"/recipes\" component={withTracker(Recipes)} />\n            <Route path=\"/recipe/:recipeSlug\" component={withTracker(Recipe)} />\n            <Route path=\"/spacex\" component={withTracker(SpaceX)} />\n            <Route path=\"/tabletop\" component={withTracker(Tabletop)} />\n            <Route path=\"*\" component={withTracker(NotFound)} />\n          </Switch>\n        </article>\n      </Router>\n    </>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nif (process.env.NODE_ENV === \"production\") {\n  Sentry.init({\n    dsn: \"https://3ec844af5d6d4927932a6c92934cdf1a@o345528.ingest.sentry.io/5583309\",\n    autoSessionTracking: true,\n    integrations: [new Integrations.BrowserTracing()],\n\n    // We recommend adjusting this value in production, or using tracesSampler\n    // for finer control\n    tracesSampleRate: 1.0,\n  });\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}