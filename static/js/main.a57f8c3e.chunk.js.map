{"version":3,"sources":["GoogleAnalyticsTracker.js","utils/index.js","utils/useFetch.js","components/error/index.js","pages/recipes/index.js","pages/not-found/index.js","pages/recipe/index.js","pages/spacex/index.js","utils/windowDimensions.js","pages/congress/index.js","components/topnav/index.js","utils/color.js","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["ReactGA","initialize","testMode","process","gaOptions","cookieDomain","withTracker","WrappedComponent","options","trackPage","page","set","pageview","HOC","props","useEffect","location","pathname","apiUrlBase","projectInfo","link","subtitle","title","useFetch","url","initialValue","useState","data","setData","loading","setLoading","a","axios","get","response","message","error","status","fetchData","Error","componentName","Recipes","recipes","recipeSearch","setRecipeSearch","recipeList","setRecipeList","results","filter","recipe","toLowerCase","includes","length","className","htmlFor","type","id","value","onChange","event","target","data-testid","onClick","map","key","slug","to","state","NotFound","Recipe","pathNameSplit","split","getSlug","referenceLink","ingredients","directions","notes","href","rel","source","SpaceX","upcomingLaunch","calcTimeToLaunch","nextLaunch","difference","Date","timeLeft","days","Math","floor","hours","minutes","seconds","timeToLaunch","setTimeToLaunch","setTimeout","timerComponents","Object","keys","forEach","interval","push","launch","toString","getWindowDimensions","window","height","innerHeight","width","innerWidth","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","Congress","congress","keyMap","D","F","M","R","properCase","charAt","toUpperCase","slice","genericLabel","label","chamberAgeChart","distribution","chamberData","age","barGap","barCategoryGap","margin","top","right","left","bottom","strokeDasharray","dataKey","position","allowDecimals","verticalAlign","stackId","fill","name","ageSection","ageLabel","average","all","democrat","republican","female","male","detailedAge","full_name","date_of_birth","gender","party","genderSection","genderData","total","women","percentWomen","men","percentMen","partySection","partyKey","session","chamber","chamberSection","TopNav","project","withRouter","getRGB","hex","r","parseInt","g","b","textColor","round","Home","borderColor","random","complementaryBorderColor","invertColor","digit","complementaryColor","style","backgroundColor","color","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a57f8c3e.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize(\"UA-45142145-1\", {\n  testMode: process.env.NODE_ENV === \"test\",\n  gaOptions: {\n    cookieDomain: \"auto\",\n  },\n});\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    ReactGA.set({\n      page,\n      ...options,\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = (props) => {\n    useEffect(() => trackPage(props.location.pathname), [\n      props.location.pathname,\n    ]);\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","export const apiUrlBase = \"https://api.jimsegal.com\";\n// export const apiUrlBase = \"http://localhost:8001\";\n\nexport const projectInfo = [\n  {\n    link: \"/congress\",\n    subtitle: \"Some fun data surrounding the current congressional sesssion\",\n    title: \"Congress\",\n  },\n  {\n    link: \"/recipes\",\n    subtitle: \"A bunch of recipes that I frequent and wanted to show off\",\n    title: \"Recipes\",\n  },\n  {\n    link: \"/spacex\",\n    subtitle: \"A countdown timer until the next launch of a Space X rocket\",\n    title: \"Space X\",\n  },\n];\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// custom hook for performing GET request\nconst useFetch = (url, initialValue) => {\n  const [data, setData] = useState(initialValue);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(url);\n        setData(response.data);\n      } catch ({ message, response }) {\n        setData({ error: message, status: response ? response.status : \"500\" });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return { loading, data };\n};\n\nexport default useFetch;\n","import React from \"react\";\n\nconst Error = ({ componentName }) => (\n  <section>\n    <h3>\n      Whoops! There was a problem loading{\" \"}\n      {componentName ? `${componentName} data.` : \"data.\"}\n    </h3>\n    <p>Please reload browser to try again in a little bit.</p>\n  </section>\n);\n\nexport default Error;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./recipes.css\";\n\nconst Recipes = () => {\n  const { loading, data: recipes } = useFetch(`${apiUrlBase}/recipes`);\n\n  const [recipeSearch, setRecipeSearch] = useState(\"\");\n  const handleSearchChange = (event) => {\n    setRecipeSearch(event.target.value);\n  };\n  const handleResetClick = () => {\n    setRecipeSearch(\"\");\n  };\n\n  const [recipeList, setRecipeList] = useState([]);\n  useEffect(() => {\n    if (!loading && recipes) {\n      if (recipes.error) {\n        setRecipeList([]);\n        return;\n      }\n\n      const results = recipes.filter((recipe) =>\n        recipe.title.toLowerCase().includes(recipeSearch.toLowerCase())\n      );\n      setRecipeList(results);\n    }\n  }, [loading, recipes, recipeSearch]);\n\n  return (\n    <section>\n      <h2>Recipes</h2>\n      {loading && <section>Loading...</section>}\n      {recipes && recipes.error && <Error componentName=\"Recipes\" />}\n      {recipes && recipes.length && (\n        <>\n          <section className=\"recipes-filter-container\">\n            <label htmlFor=\"recipes-filter\">Search</label>\n            <input\n              type=\"text\"\n              id=\"recipes-filter\"\n              className=\"recipes-filter-input\"\n              value={recipeSearch}\n              onChange={handleSearchChange}\n              data-testid=\"recipes-filter\"\n            />\n            {recipeSearch && (\n              <button\n                className=\"recipes-filter-reset\"\n                onClick={handleResetClick}\n                data-testid=\"recipes-filter-reset\"\n              >\n                reset\n              </button>\n            )}\n          </section>\n          {recipeList.length ? (\n            <ul data-testid=\"recipes-list\">\n              {recipeList.map((recipe) => (\n                <li key={recipe.slug}>\n                  <Link\n                    to={{\n                      pathname: `/recipe/${recipe.slug}`,\n                      state: { ...recipe },\n                    }}\n                  >\n                    {recipe.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"recipes-no-results\">\n              No results for{\" \"}\n              <strong>\n                <em>{recipeSearch}</em>\n              </strong>\n            </div>\n          )}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Recipes;\n","import React from \"react\";\nimport \"../../App.css\";\n\nconst NotFound = () => <h1>Not Found</h1>;\n\nexport default NotFound;\n","import React from \"react\";\nimport { apiUrlBase } from \"../../utils\";\n\nimport ReactMarkdown from \"react-markdown\";\n\nimport useFetch from \"../../utils/useFetch\";\nimport NotFound from \"../not-found\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./recipe.css\";\n\nconst getSlug = ({ pathname, state }) => {\n  if (state && state.slug) {\n    // came from /recipes\n    return state.slug;\n  }\n\n  // didn't come from /recipes\n  const pathNameSplit = pathname.split(\"/\");\n  return pathNameSplit[pathNameSplit.length - 1];\n};\n\nconst Recipe = (props) => {\n  const slug = getSlug(props.location);\n  const { loading, data: recipe } = useFetch(`${apiUrlBase}/recipe/${slug}`);\n\n  if (loading) {\n    return <section>Loading...</section>;\n  }\n\n  if (recipe.status === 404) {\n    return <NotFound />;\n  }\n\n  if (recipe.error) {\n    return <Error componentName=\"Recipe\" />;\n  }\n\n  const { title, referenceLink, ingredients, directions, notes } = recipe;\n\n  return (\n    <section>\n      <h2>{title}</h2>\n      {referenceLink && (\n        <small>\n          <a href={referenceLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            Original Reference\n          </a>\n        </small>\n      )}\n      <h3>Ingredients</h3>\n      <div className=\"ingredients\">\n        <ReactMarkdown source={ingredients} />\n      </div>\n      <h3>Directions</h3>\n      <div className=\"directions\">\n        <ReactMarkdown source={directions} />\n      </div>\n      {notes && [\n        <h3 key=\"notes-header\">Notes</h3>,\n        <div key=\"notes-desc\">\n          <ReactMarkdown source={notes} />\n        </div>,\n      ]}\n    </section>\n  );\n};\n\nexport default Recipe;\n","import React, { useEffect, useState, Fragment } from \"react\";\n\nimport useFetch from \"../../utils/useFetch\";\nimport Error from \"../../components/error\";\n\nimport \"../../App.css\";\nimport \"./spacex.css\";\n\nconst SpaceX = () => {\n  const { loading, data: upcomingLaunch } = useFetch(\n    `https://api.spacexdata.com/v3/launches/upcoming?limit=1`\n  );\n\n  const calcTimeToLaunch = (nextLaunch) => {\n    const difference = +new Date(nextLaunch) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeToLaunch, setTimeToLaunch] = useState(calcTimeToLaunch());\n  useEffect(() => {\n    if (!loading) {\n      if (upcomingLaunch.error) {\n        setTimeToLaunch(0);\n        return;\n      }\n\n      setTimeout(() => {\n        setTimeToLaunch(calcTimeToLaunch(upcomingLaunch[0][\"launch_date_utc\"]));\n      }, 1000);\n    }\n  }, [loading, upcomingLaunch]);\n\n  const timerComponents = [];\n\n  Object.keys(timeToLaunch).forEach((interval) => {\n    if (interval !== \"seconds\" && !timeToLaunch[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <div key={interval}>\n        {timeToLaunch[interval]} {interval}{\" \"}\n      </div>\n    );\n  });\n\n  return (\n    <section className=\"spacex-container\">\n      <h2>Next Space X Launch</h2>\n      {loading && <section>Loading...</section>}\n      {upcomingLaunch && upcomingLaunch.error && (\n        <Error componentName=\"SpaceX\" />\n      )}\n\n      {upcomingLaunch && upcomingLaunch.length && (\n        <>\n          {upcomingLaunch.map((launch) => (\n            <Fragment key={launch[\"mission_name\"]}>\n              <div className=\"spacex-mega\">{timerComponents}</div>\n\n              <h3>{launch[\"mission_name\"]}</h3>\n              <div className=\"spacex-item\">\n                <label>When:</label>\n                <span>{new Date(launch[\"launch_date_utc\"]).toString()}</span>\n              </div>\n              <div className=\"spacex-item\">\n                <label>Rocket:</label>\n                <span>{launch[\"rocket\"][\"rocket_name\"]}</span>\n              </div>\n              <div className=\"spacex-item\">\n                <label>Launch Site:</label>\n                <span>{launch[\"launch_site\"][\"site_name_long\"]}</span>\n              </div>\n\n              <div className=\"spacex-details\">{launch[\"details\"]}</div>\n            </Fragment>\n          ))}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default SpaceX;\n","import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerHeight: height, innerWidth: width } = window;\n  return { height, width };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nexport default useWindowDimensions;\n","import React, { Fragment } from \"react\";\n\nimport { apiUrlBase } from \"../../utils\";\nimport useFetch from \"../../utils/useFetch\";\nimport useWindowDimensions from \"../../utils/windowDimensions\";\nimport Error from \"../../components/error\";\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nimport \"../../App.css\";\nimport \"./congress.css\";\n\nconst Congress = () => {\n  const { loading, data: congress } = useFetch(`${apiUrlBase}/congress/stats`);\n  const { width } = useWindowDimensions();\n\n  const keyMap = {\n    D: \"democrat\",\n    F: \"female\",\n    M: \"male\",\n    R: \"republican\",\n  };\n\n  const properCase = (value) => value.charAt(0).toUpperCase() + value.slice(1);\n  const genericLabel = (label, value) => (\n    <div>\n      {<label>{label}: </label>}\n      <span>{value}</span>\n    </div>\n  );\n\n  const chamberSection = (data, chamber) => (\n    <article key={chamber}>\n      <h3>{properCase(chamber)}</h3>\n      <hr />\n      <section className=\"chamber\">\n        {!!data[chamber].age.distribution &&\n          chamberAgeChart(data[chamber].age.distribution)}\n        <section className=\"chamber-data\">\n          {ageSection(data[chamber].age)}\n          {genderSection(data[chamber].gender)}\n          {partySection(data[chamber].party)}\n        </section>\n      </section>\n    </article>\n  );\n  const chamberAgeChart = (distribution) => {\n    const chamberData = Object.keys(distribution).map((age) => {\n      return { ...distribution[age], age: age };\n    });\n\n    return (\n      <section className=\"chamber-chart\">\n        <BarChart\n          width={width * 0.9}\n          height={400}\n          data={chamberData}\n          barGap={\"10%\"}\n          barCategoryGap={\"20%\"}\n          margin={{\n            top: 20,\n            right: 10,\n            left: 10,\n            bottom: 20,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"age\" label={{ value: \"Age\", position: \"bottom\" }} />\n          <YAxis allowDecimals={false} />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" />\n          <Bar\n            dataKey=\"D\"\n            stackId=\"a\"\n            fill=\"#0015BC\"\n            name={properCase(keyMap.D)}\n          />\n          <Bar\n            dataKey=\"R\"\n            stackId=\"a\"\n            fill=\"#E9141D\"\n            name={properCase(keyMap.R)}\n          />\n          <Bar\n            dataKey=\"M\"\n            stackId=\"b\"\n            fill=\"#00D136\"\n            name={properCase(keyMap.M)}\n          />\n          <Bar\n            dataKey=\"F\"\n            stackId=\"b\"\n            fill=\"#B533FF\"\n            name={properCase(keyMap.F)}\n          />\n        </BarChart>\n      </section>\n    );\n  };\n\n  const ageSection = (age) => (\n    <>\n      <section>\n        <h4>Average Age</h4>\n        {ageLabel(\"\", age.average.all)}\n\n        <section>\n          <h5>By Party</h5>\n          {ageLabel(properCase(keyMap.D), age.average.democrat)}\n          {ageLabel(properCase(keyMap.R), age.average.republican)}\n        </section>\n        <section>\n          <h5>By Gender</h5>\n          {ageLabel(properCase(keyMap.F), age.average.female)}\n          {ageLabel(properCase(keyMap.M), age.average.male)}\n        </section>\n      </section>\n      {detailedAge(age, \"youngest\")}\n      {detailedAge(age, \"oldest\")}\n    </>\n  );\n\n  const ageLabel = (label, age) => (\n    <div>\n      {label ? <label>{label}: </label> : \"\"}\n      <span>{age} years old</span>\n    </div>\n  );\n\n  const detailedAge = (data, key) => (\n    <section>\n      <h4>{properCase(key)} Member</h4>\n      <label>{data[key].full_name}</label>\n      {ageLabel(\"Age\", data[key].age)}\n      {genericLabel(\"Date of Birth\", data[key].date_of_birth)}\n      {genericLabel(\"State Representation\", data[key].state)}\n      {genericLabel(\"Gender\", properCase(keyMap[data[key].gender]))}\n      {genericLabel(\"Party\", properCase(keyMap[data[key].party]))}\n    </section>\n  );\n\n  const genderSection = (gender) => (\n    <section>\n      <h4>Number of Members by Gender</h4>\n      {genderData(gender)}\n    </section>\n  );\n\n  const genderData = (data) => (\n    <>\n      {genericLabel(\"Total\", data.total)}\n      {genericLabel(\n        properCase(keyMap.F),\n        `${data.women} (${data.percentWomen}%)`\n      )}\n      {genericLabel(properCase(keyMap.M), `${data.men} (${data.percentMen}%)`)}\n    </>\n  );\n\n  const partySection = (party) => (\n    <section>\n      <h4>Number of Members by Party</h4>\n      {[\"D\", \"R\"].map((partyKey) => (\n        <Fragment key={partyKey}>\n          <h5>{properCase(keyMap[partyKey])}</h5>\n          {genderData(party[partyKey])}\n        </Fragment>\n      ))}\n    </section>\n  );\n\n  return (\n    <section>\n      <h2 className=\"congress-header\">Congressional Information</h2>\n      {loading && <section className=\"congress-header\">Loading...</section>}\n      {congress && congress.error && <Error componentName=\"Congress\" />}\n      {congress && !congress.error && (\n        <>\n          <div className=\"congress-subheader\">Session #{congress.session}</div>\n          <div className=\"congress\">\n            {[\"house\", \"senate\"].map((chamber) =>\n              chamberSection(congress, chamber)\n            )}\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Congress;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport \"./topnav.css\";\nimport { projectInfo } from \"../../utils\";\n\nconst TopNav = (props) =>\n  props.location.pathname === \"/\" ? null : (\n    <>\n      <nav>\n        <ul className=\"topnav-list\">\n          {projectInfo.map((project) => (\n            <li className=\"topnav-list-item\" key={project.title}>\n              <Link to={project.link}>{project.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n      <hr />\n    </>\n  );\n\nexport default withRouter((props) => <TopNav {...props} />);\n","const getRGB = (hex) => {\n  return {\n    r: parseInt(hex.slice(0, 2), 16),\n    g: parseInt(hex.slice(2, 4), 16),\n    b: parseInt(hex.slice(4, 6), 16),\n  };\n};\n\nexport const randomHexColor = () =>\n  Math.floor(Math.random() * 16777215).toString(16);\n\nexport const complementaryColor = (hex) => {\n  const padZero = (str) => (\"00\" + str).slice(-2);\n  const invertColor = (digit) => padZero((255 - digit).toString(16));\n  const { r, g, b } = getRGB(hex);\n\n  return invertColor(r) + invertColor(g) + invertColor(b);\n};\n\nexport const textColor = (hex) => {\n  const { r, g, b } = getRGB(hex);\n  const brightness = Math.round((r * 299 + g * 587 + b * 114) / 1000);\n\n  return brightness > 125 ? \"444444\" : \"efefef\";\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./home.css\";\n\nimport { projectInfo } from \"../../utils\";\nimport {\n  complementaryColor,\n  randomHexColor,\n  textColor,\n} from \"../../utils/color\";\n\nconst Home = () => (\n  <section>\n    <ul className=\"project-list\">\n      {projectInfo.map((project) => {\n        const borderColor = randomHexColor();\n        const complementaryBorderColor = complementaryColor(borderColor);\n        return (\n          <li\n            key={project.title}\n            className=\"project-list-item\"\n            style={{ borderColor: `#${borderColor}` }}\n          >\n            <Link className=\"project-list-item-link\" to={project.link}>\n              <div\n                className=\"project-list-item-placeholder\"\n                style={{\n                  backgroundColor: `#${complementaryBorderColor}`,\n                }}\n              >\n                <h2\n                  className=\"project-list-item-title\"\n                  style={{ color: `#${textColor(complementaryBorderColor)}` }}\n                >\n                  {project.title}\n                </h2>\n              </div>\n\n              <p>{project.subtitle}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  </section>\n);\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport withTracker from \"./GoogleAnalyticsTracker\";\n\nimport Recipes from \"./pages/recipes\";\nimport Recipe from \"./pages/recipe\";\nimport SpaceX from \"./pages/spacex\";\nimport NotFound from \"./pages/not-found\";\nimport Congress from \"./pages/congress\";\nimport TopNav from \"./components/topnav\";\nimport Home from \"./pages/home\";\n\nconst App = () => {\n  return (\n    <>\n      <header>\n        <h1 className=\"app-header\">Jim Segal Projects</h1>\n      </header>\n      <Router>\n        <article>\n          <TopNav />\n          <Switch>\n            <Route exact path=\"/\" component={withTracker(Home)} />\n            <Route path=\"/congress\" component={withTracker(Congress)} />\n            <Route path=\"/recipes\" component={withTracker(Recipes)} />\n            <Route path=\"/recipe/:recipeSlug\" component={withTracker(Recipe)} />\n            <Route path=\"/spacex\" component={withTracker(SpaceX)} />\n            <Route path=\"*\" component={withTracker(NotFound)} />\n          </Switch>\n        </article>\n      </Router>\n    </>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}